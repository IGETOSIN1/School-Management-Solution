<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Renci.SshNet</name>
    </assembly>
    <members>
        <member name="M:Renci.SshNet.Abstractions.CryptoAbstraction.GenerateRandom(System.Int32)">
            <summary>
            Generates a <see cref="T:System.Byte"/> array of the specified length, and fills it with a
            cryptographically strong random sequence of values.
            </summary>
            <param name="length">The length of the array generate.</param>
        </member>
        <member name="M:Renci.SshNet.Abstractions.CryptoAbstraction.GenerateRandom(System.Byte[])">
            <summary>
            Fills an array of bytes with a cryptographically strong random sequence of values.
            </summary>
            <param name="data">The array to fill with cryptographically strong random bytes.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
            <remarks>
            The length of the byte array determines how many random bytes are produced.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Abstractions.DnsAbstraction.GetHostAddresses(System.String)">
            <summary>
            Returns the Internet Protocol (IP) addresses for the specified host.
            </summary>
            <param name="hostNameOrAddress">The host name or IP address to resolve</param>
            <returns>
            An array of type <see cref="T:System.Net.IPAddress"/> that holds the IP addresses for the host that
            is specified by the <paramref name="hostNameOrAddress"/> parameter.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An error is encountered when resolving <paramref name="hostNameOrAddress"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Abstractions.FileSystemAbstraction.EnumerateFiles(System.IO.DirectoryInfo,System.String)">
            <summary>
            Returns an enumerable collection of file information that matches a search pattern.
            </summary>
            <param name="directoryInfo"></param>
            <param name="searchPattern">The search string to match against the names of files.</param>
            <returns>
            An enumerable collection of files that matches <paramref name="searchPattern"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="directoryInfo"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="searchPattern"/> is <c>null</c>.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The path represented by <paramref name="directoryInfo"/> does not exist or is not valid.</exception>
        </member>
        <member name="M:Renci.SshNet.Abstractions.SocketAbstraction.CanWrite(System.Net.Sockets.Socket)">
            <summary>
            Returns a value indicating whether the specified <see cref="T:System.Net.Sockets.Socket"/> can be used
            to send data.
            </summary>
            <param name="socket">The <see cref="T:System.Net.Sockets.Socket"/> to check.</param>
            <returns>
            <c>true</c> if <paramref name="socket"/> can be written to; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Abstractions.SocketAbstraction.ReadByte(System.Net.Sockets.Socket,System.TimeSpan)">
            <summary>
            Reads a byte from the specified <see cref="T:System.Net.Sockets.Socket"/>.
            </summary>
            <param name="socket">The <see cref="T:System.Net.Sockets.Socket"/> to read from.</param>
            <param name="timeout">Specifies the amount of time after which the call will time out.</param>
            <returns>
            The byte read, or <c>-1</c> if the socket was closed.
            </returns>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">The read operation timed out.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">The read failed.</exception>
        </member>
        <member name="M:Renci.SshNet.Abstractions.SocketAbstraction.SendByte(System.Net.Sockets.Socket,System.Byte)">
            <summary>
            Sends a byte using the specified <see cref="T:System.Net.Sockets.Socket"/>.
            </summary>
            <param name="socket">The <see cref="T:System.Net.Sockets.Socket"/> to write to.</param>
            <param name="value">The value to send.</param>
            <exception cref="T:System.Net.Sockets.SocketException">The write failed.</exception>
        </member>
        <member name="M:Renci.SshNet.Abstractions.SocketAbstraction.Read(System.Net.Sockets.Socket,System.Byte[],System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Receives data from a bound <see cref="T:System.Net.Sockets.Socket"/>into a receive buffer.
            </summary>
            <param name="socket"></param>
            <param name="buffer">An array of type <see cref="T:System.Byte"/> that is the storage location for the received data. </param>
            <param name="offset">The position in <paramref name="buffer"/> parameter to store the received data.</param>
            <param name="size">The number of bytes to receive.</param>
            <param name="timeout">Specifies the amount of time after which the call will time out.</param>
            <returns>
            The number of bytes received.
            </returns>
            <remarks>
            If no data is available for reading, the <see cref="M:Renci.SshNet.Abstractions.SocketAbstraction.Read(System.Net.Sockets.Socket,System.Byte[],System.Int32,System.Int32,System.TimeSpan)"/> method will
            block until data is available or the time-out value was exceeded. If the time-out value was exceeded, the
            <see cref="M:Renci.SshNet.Abstractions.SocketAbstraction.Read(System.Net.Sockets.Socket,System.Byte[],System.Int32,System.Int32,System.TimeSpan)"/> call will throw a <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/>.
             If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the
            <see cref="M:Renci.SshNet.Abstractions.SocketAbstraction.Read(System.Net.Sockets.Socket,System.Byte[],System.Int32,System.Int32,System.TimeSpan)"/> method will complete immediately and throw a <see cref="T:System.Net.Sockets.SocketException"/>.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Abstractions.ThreadAbstraction.Sleep(System.Int32)">
            <summary>
            Suspends the current thread for the specified number of milliseconds.
            </summary>
            <param name="millisecondsTimeout">The number of milliseconds for which the thread is suspended.</param>
        </member>
        <member name="M:Renci.SshNet.Abstractions.ThreadAbstraction.ExecuteThread(System.Action)">
            <summary>
            Executes the specified action in a separate thread.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="T:Renci.SshNet.AuthenticationMethod">
            <summary>
            Base class for all supported authentication methods
            </summary>
        </member>
        <member name="P:Renci.SshNet.AuthenticationMethod.Name">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the authentication method.
            </value>
        </member>
        <member name="P:Renci.SshNet.AuthenticationMethod.Username">
            <summary>
            Gets connection username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.AuthenticationMethod.AllowedAuthentications">
            <summary>
            Gets list of allowed authentications.
            </summary>
        </member>
        <member name="M:Renci.SshNet.AuthenticationMethod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.AuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.AuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>
            The result of the authentication process.
            </returns>
        </member>
        <member name="M:Renci.SshNet.AuthenticationMethod.Renci#SshNet#IAuthenticationMethod#Authenticate(Renci.SshNet.ISession)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>
            The result of the authentication process.
            </returns>
        </member>
        <member name="T:Renci.SshNet.AuthenticationResult">
            <summary>
            Represents possible authentication methods results
            </summary>
        </member>
        <member name="F:Renci.SshNet.AuthenticationResult.Success">
            <summary>
            Authentication was successful.
            </summary>
        </member>
        <member name="F:Renci.SshNet.AuthenticationResult.PartialSuccess">
            <summary>
            Authentication completed with partial success.
            </summary>
        </member>
        <member name="F:Renci.SshNet.AuthenticationResult.Failure">
            <summary>
            Authentication failed.
            </summary>
        </member>
        <member name="T:Renci.SshNet.BaseClient">
            <summary>
            Serves as base class for client implementations, provides common client functionality.
            </summary>
        </member>
        <member name="F:Renci.SshNet.BaseClient._ownsConnectionInfo">
            <summary>
            Holds value indicating whether the connection info is owned by this client.
            </summary>
        </member>
        <member name="P:Renci.SshNet.BaseClient.Session">
            <summary>
            Gets the current session.
            </summary>
            <value>
            The current session.
            </value>
        </member>
        <member name="P:Renci.SshNet.BaseClient.ServiceFactory">
            <summary>
            Gets the factory for creating new services.
            </summary>
            <value>
            The factory for creating new services.
            </value>
        </member>
        <member name="P:Renci.SshNet.BaseClient.ConnectionInfo">
            <summary>
            Gets the connection info.
            </summary>
            <value>
            The connection info.
            </value>
            <exception cref="T:System.ObjectDisposedException">The method was called after the client was disposed.</exception>
        </member>
        <member name="P:Renci.SshNet.BaseClient.IsConnected">
            <summary>
            Gets a value indicating whether this client is connected to the server.
            </summary>
            <value>
            <c>true</c> if this client is connected; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">The method was called after the client was disposed.</exception>
        </member>
        <member name="P:Renci.SshNet.BaseClient.KeepAliveInterval">
            <summary>
            Gets or sets the keep-alive interval.
            </summary>
            <value>
            The keep-alive interval. Specify negative one (-1) milliseconds to disable the
            keep-alive. This is the default value.
            </value>
            <exception cref="T:System.ObjectDisposedException">The method was called after the client was disposed.</exception>
        </member>
        <member name="E:Renci.SshNet.BaseClient.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
            <example>
              <code source="..\..\src\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient Connect ErrorOccurred" language="C#" title="Handle ErrorOccurred event" />
            </example>
        </member>
        <member name="E:Renci.SshNet.BaseClient.HostKeyReceived">
            <summary>
            Occurs when host key received.
            </summary>
            <example>
              <code source="..\..\src\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient Connect HostKeyReceived" language="C#" title="Handle HostKeyReceived event" />
            </example>
        </member>
        <member name="M:Renci.SshNet.BaseClient.#ctor(Renci.SshNet.ConnectionInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.BaseClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <param name="ownsConnectionInfo">Specified whether this instance owns the connection info.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is <c>null</c>.</exception>
            <remarks>
            If <paramref name="ownsConnectionInfo"/> is <c>true</c>, then the
            connection info will be disposed when this instance is disposed.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.BaseClient.#ctor(Renci.SshNet.ConnectionInfo,System.Boolean,Renci.SshNet.IServiceFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.BaseClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
            <param name="ownsConnectionInfo">Specified whether this instance owns the connection info.</param>
            <param name="serviceFactory">The factory to use for creating new services.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceFactory"/> is <c>null</c>.</exception>
            <remarks>
            If <paramref name="ownsConnectionInfo"/> is <c>true</c>, then the
            connection info will be disposed when this instance is disposed.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Connect">
            <summary>
            Connects client to the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">The client is already connected.</exception>
            <exception cref="T:System.ObjectDisposedException">The method was called after the client was disposed.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">Socket connection to the SSH server or proxy server could not be established, or an error occurred while resolving the hostname.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">SSH session could not be established.</exception>
            <exception cref="T:Renci.SshNet.Common.SshAuthenticationException">Authentication of SSH session failed.</exception>
            <exception cref="T:Renci.SshNet.Common.ProxyException">Failed to establish proxy connection.</exception>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Disconnect">
            <summary>
            Disconnects client from the server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The method was called after the client was disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.BaseClient.SendKeepAlive">
            <summary>
            Sends a keep-alive message to the server.
            </summary>
            <remarks>
            Use <see cref="P:Renci.SshNet.BaseClient.KeepAliveInterval"/> to configure the client to send a keep-alive at regular
            intervals.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The method was called after the client was disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnConnecting">
            <summary>
            Called when client is connecting to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnConnected">
            <summary>
            Called when client is connected to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnDisconnected">
            <summary>
            Called when client is disconnected from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.BaseClient.CheckDisposed">
            <summary>
            Check if the current instance is disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">THe current instance is disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.BaseClient"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.StopKeepAliveTimer">
            <summary>
            Stops the keep-alive timer, and waits until all timer callbacks have been
            executed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.StartKeepAliveTimer">
            <summary>
            Starts the keep-alive timer.
            </summary>
            <remarks>
            When <see cref="P:Renci.SshNet.BaseClient.KeepAliveInterval"/> is negative one (-1) milliseconds, then
            the timer will not be started.
            </remarks>
        </member>
        <member name="T:Renci.SshNet.Channels.Channel">
            <summary>
            Represents base class for SSH channel implementations.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.Channel._closeMessageSent">
            <summary>
            Holds a value indicating whether the SSH_MSG_CHANNEL_CLOSE has been sent to the remote party.
            </summary>
            <value>
            <c>true</c> when a SSH_MSG_CHANNEL_CLOSE message has been sent to the other party;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Renci.SshNet.Channels.Channel._closeMessageReceived">
            <summary>
            Holds a value indicating whether a SSH_MSG_CHANNEL_CLOSE has been received from the other
            party.
            </summary>
            <value>
            <c>true</c> when a SSH_MSG_CHANNEL_CLOSE message has been received from the other party;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Renci.SshNet.Channels.Channel._eofMessageReceived">
            <summary>
            Holds a value indicating whether the SSH_MSG_CHANNEL_EOF has been received from the other party.
            </summary>
            <value>
            <c>true</c> when a SSH_MSG_CHANNEL_EOF message has been received from the other party;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Renci.SshNet.Channels.Channel._eofMessageSent">
            <summary>
            Holds a value indicating whether the SSH_MSG_CHANNEL_EOF has been sent to the remote party.
            </summary>
            <value>
            <c>true</c> when a SSH_MSG_CHANNEL_EOF message has been sent to the remote party;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.Exception">
            <summary>
            Occurs when an exception is thrown when processing channel messages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.#ctor(Renci.SshNet.ISession,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Channels.Channel"/> instance.
            </summary>
            <param name="session">The session.</param>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="localWindowSize">Size of the window.</param>
            <param name="localPacketSize">Size of the packet.</param>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.Session">
            <summary>
            Gets the session.
            </summary>
            <value>
             Thhe session.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.LocalChannelNumber">
            <summary>
            Gets the local channel number.
            </summary>
            <value>
            The local channel number.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.LocalPacketSize">
            <summary>
            Gets the maximum size of a data packet that we can receive using the channel.
            </summary>
            <value>
            The maximum size of a packet.
            </value>
            <remarks>
            <para>
            This is the maximum size (in bytes) we support for the data (payload) of a
            <c>SSH_MSG_CHANNEL_DATA</c> message we receive.
            </para>
            <para>
            We currently do not enforce this limit.
            </para>
            </remarks>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.LocalWindowSize">
            <summary>
            Gets the size of the local window.
            </summary>
            <value>
            The size of the local window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.RemoteChannelNumber">
            <summary>
            Gets the remote channel number.
            </summary>
            <value>
            The remote channel number.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.RemotePacketSize">
            <summary>
            Gets the maximum size of a data packet that we can send using the channel.
            </summary>
            <value>
            The maximum size of data that can be sent using a <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/>
            on the current channel.
            </value>
            <exception cref="T:System.InvalidOperationException">The channel has not been opened, or the open has not yet been confirmed.</exception>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.RemoteWindowSize">
            <summary>
            Gets the window size of the remote server.
            </summary>
            <value>
            The size of the server window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.IsOpen">
            <summary>
            Gets a value indicating whether this channel is open.
            </summary>
            <value>
            <c>true</c> if this channel is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.DataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.ExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.EndOfData">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.Closed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestSucceeded">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestFailed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> is received.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.IsConnected">
            <summary>
            Gets a value indicating whether the session is connected.
            </summary>
            <value>
            <c>true</c> if the session is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.ConnectionInfo">
            <summary>
            Gets the connection info.
            </summary>
            <value>The connection info.</value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.SessionSemaphore">
            <summary>
            Gets the session semaphore to control number of session channels.
            </summary>
            <value>The session semaphore.</value>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendData(System.Byte[])">
            <summary>
            Sends a SSH_MSG_CHANNEL_DATA message with the specified payload.
            </summary>
            <param name="data">The payload to send.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a SSH_MSG_CHANNEL_DATA message with the specified payload.
            </summary>
            <param name="data">An array of <see cref="T:System.Byte"/> containing the payload to send.</param>
            <param name="offset">The zero-based offset in <paramref name="data"/> at which to begin taking data from.</param>
            <param name="size">The number of bytes of <paramref name="data"/> to send.</param>
            <remarks>
            <para>
            When the size of the data to send exceeds the maximum packet size or the remote window
            size does not allow the full data to be sent, then this method will send the data in
            multiple chunks and will wait for the remote window size to be adjusted when it's zero.
            </para>
            <para>
            This is done to support SSH servers will a small window size that do not agressively
            increase their window size. We need to take into account that there may be SSH servers
            that only increase their window size when it has reached zero.
            </para>
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnWindowAdjust(System.UInt32)">
            <summary>
            Called when channel window need to be adjust.
            </summary>
            <param name="bytesToAdd">The bytes to add.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnExtendedData(System.Byte[],System.UInt32)">
            <summary>
            Called when channel extended data is received.
            </summary>
            <param name="data">The data.</param>
            <param name="dataTypeCode">The data type code.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnEof">
            <summary>
            Called when channel has no more data to receive.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnClose">
            <summary>
            Called when channel is closed by the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnRequest(Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Called when channel request received.
            </summary>
            <param name="info">Channel request information.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnSuccess">
            <summary>
            Called when channel request was successful
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnFailure">
            <summary>
            Called when channel request failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.RaiseExceptionEvent(System.Exception)">
            <summary>
            Raises <see cref="E:Renci.SshNet.Channels.Channel.Exception"/> event.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.TrySendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends a message to the server.
            </summary>
            <param name="message">The message to send.</param>
            <returns>
            <c>true</c> if the message was sent to the server; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">The size of the packet exceeds the maximum size defined by the protocol.</exception>
            <remarks>
            This methods returns <c>false</c> when the attempt to send the message results in a
            <see cref="T:System.Net.Sockets.SocketException"/> or a <see cref="T:Renci.SshNet.Common.SshException"/>.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends SSH message to the server.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendEof">
            <summary>
            Sends a SSH_MSG_CHANNEL_EOF message to the remote server.
            </summary>
            <exception cref="T:System.InvalidOperationException">The channel is closed.</exception>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.WaitOnHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for the handle to be signaled or for an error to occurs.
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Close">
            <summary>
            Closes the channel, waiting for the SSH_MSG_CHANNEL_CLOSE message to be received from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnChannelException(System.Exception)">
            <summary>
            Called when an <see cref="E:Renci.SshNet.Channels.Channel.Exception"/> occurs while processing a channel message.
            </summary>
            <param name="ex">The <see cref="E:Renci.SshNet.Channels.Channel.Exception"/>.</param>
            <remarks>
            This method will in turn invoke <see cref="M:Renci.SshNet.Channels.Channel.OnErrorOccured(System.Exception)"/>, and
            raise the <see cref="E:Renci.SshNet.Channels.Channel.Exception"/> event.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.GetDataLengthThatCanBeSentInMessage(System.Int32)">
            <summary>
            Determines the length of data that currently can be sent in a single message.
            </summary>
            <param name="messageLength">The length of the message that must be sent.</param>
            <returns>
            The actual data length that currently can be sent.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Channels.Channel"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelDirectTcpip">
            <summary>
            Implements "direct-tcpip" SSH channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.#ctor(Renci.SshNet.ISession,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Channels.ChannelDirectTcpip"/> instance.
            </summary>
            <param name="session">The session.</param>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="localWindowSize">Size of the window.</param>
            <param name="localPacketSize">Size of the packet.</param>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelDirectTcpip.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.ForwardedPort_Closing(System.Object,System.EventArgs)">
            <summary>
            Occurs as the forwarded port is being stopped.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.Bind">
            <summary>
            Binds channel to remote host.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.CloseSocket">
            <summary>
            Closes the socket, hereby interrupting the blocking receive in <see cref="M:Renci.SshNet.Channels.ChannelDirectTcpip.Bind"/>.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.ShutdownSocket(System.Net.Sockets.SocketShutdown)">
            <summary>
            Shuts down the socket.
            </summary>
            <param name="how">One of the <see cref="T:System.Net.Sockets.SocketShutdown"/> values that specifies the operation that will no longer be allowed.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.Close">
            <summary>
            Closes the channel, waiting for the SSH_MSG_CHANNEL_CLOSE message to be received from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnEof">
            <summary>
            Called when channel has no more data to receive.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnErrorOccured(System.Exception)">
            <summary>
            Called whenever an unhandled <see cref="T:System.Exception"/> occurs in <see cref="T:Renci.SshNet.Session"/> causing
            the message loop to be interrupted, or when an exception occurred processing a channel message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnDisconnected">
            <summary>
            Called when the server wants to terminate the connection immmediately.
            </summary>
            <remarks>
            The sender MUST NOT send or receive any data after this message, and
            the recipient MUST NOT accept any data after receiving this message.
            </remarks>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelForwardedTcpip">
            <summary>
            Implements "forwarded-tcpip" SSH channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.#ctor(Renci.SshNet.ISession,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Channels.ChannelForwardedTcpip"/> instance.
            </summary>
            <param name="session">The session.</param>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="localWindowSize">Size of the window.</param>
            <param name="localPacketSize">Size of the packet.</param>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="remoteWindowSize">The window size of the remote party.</param>
            <param name="remotePacketSize">The maximum size of a data packet that we can send to the remote party.</param>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelForwardedTcpip.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.Bind(System.Net.IPEndPoint,Renci.SshNet.IForwardedPort)">
            <summary>
            Binds the channel to the specified endpoint.
            </summary>
            <param name="remoteEndpoint">The endpoint to connect to.</param>
            <param name="forwardedPort">The forwarded port for which the channel is opened.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.ForwardedPort_Closing(System.Object,System.EventArgs)">
            <summary>
            Occurs as the forwarded port is being stopped.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.ShutdownSocket(System.Net.Sockets.SocketShutdown)">
            <summary>
            Shuts down the socket.
            </summary>
            <param name="how">One of the <see cref="T:System.Net.Sockets.SocketShutdown"/> values that specifies the operation that will no longer be allowed.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.CloseSocket">
            <summary>
            Closes the socket, hereby interrupting the blocking receive in <see cref="M:Renci.SshNet.Channels.ChannelForwardedTcpip.Bind(System.Net.IPEndPoint,Renci.SshNet.IForwardedPort)"/>.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.Close">
            <summary>
            Closes the channel waiting for the SSH_MSG_CHANNEL_CLOSE message to be received from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelSession">
            <summary>
            Implements Session SSH channel.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelSession._failedOpenAttempts">
            <summary>
            Counts failed channel open attempts
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelSession._sessionSemaphoreObtained">
            <summary>
            Holds a value indicating whether the session semaphore has been obtained by the current
            channel.
            </summary>
            <value>
            <c>0</c> when the session semaphore has not been obtained or has already been released,
            and <c>1</c> when the session has been obtained and still needs to be released.
            </value>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelSession._channelOpenResponseWaitHandle">
            <summary>
            Wait handle to signal when response was received to open the channel
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.#ctor(Renci.SshNet.ISession,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Channels.ChannelSession"/> instance.
            </summary>
            <param name="session">The session.</param>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="localWindowSize">Size of the window.</param>
            <param name="localPacketSize">Size of the packet.</param>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelSession.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.Open">
            <summary>
            Opens the channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnOpenFailure(System.UInt32,System.String,System.String)">
            <summary>
            Called when channel failed to open.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="description">The description.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendPseudoTerminalRequest(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
            <summary>
            Sends the pseudo terminal request.
            </summary>
            <param name="environmentVariable">The environment variable.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendX11ForwardingRequest(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Sends the X11 forwarding request.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> the it is single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendEnvironmentVariableRequest(System.String,System.String)">
            <summary>
            Sends the environment variable request.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendShellRequest">
            <summary>
            Sends the shell request.
            </summary>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExecRequest(System.String)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="command">The command.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendBreakRequest(System.UInt32)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="breakLength">Length of the break.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendSubsystemRequest(System.String)">
            <summary>
            Sends the subsystem request.
            </summary>
            <param name="subsystem">The subsystem.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendWindowChangeRequest(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sends the window change request.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendLocalFlowRequest(System.Boolean)">
            <summary>
            Sends the local flow request.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendSignalRequest(System.String)">
            <summary>
            Sends the signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExitStatusRequest(System.UInt32)">
            <summary>
            Sends the exit status request.
            </summary>
            <param name="exitStatus">The exit status.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExitSignalRequest(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sends the exit signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> [core dumped].</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendEndOfWriteRequest">
            <summary>
            Sends eow@openssh.com request.
            </summary>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendKeepAliveRequest">
            <summary>
            Sends keepalive@openssh.com request.
            </summary>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnSuccess">
            <summary>
            Called when channel request was successful
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnFailure">
            <summary>
            Called when channel request failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendChannelOpenMessage">
            <summary>
            Sends the channel open message.
            </summary>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">The client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">The operation timed out.</exception>
            <exception cref="T:System.InvalidOperationException">The size of the packet exceeds the maximum size defined by the protocol.</exception>
            <remarks>
            <para>
            When a session semaphore for this instance has not yet been obtained by this or any other thread,
            the thread will block until such a semaphore is available and send a <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/>
            to the remote host.
            </para>
            <para>
            Note that the session semaphore is released in any of the following cases:
            <list type="bullet">
              <item>
                <description>A <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> is received for the channel being opened.</description>
              </item>
              <item>
                <description>The remote host does not respond to the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> within the configured <see cref="P:Renci.SshNet.ConnectionInfo.Timeout"/>.</description>
              </item>
              <item>
                <description>The remote host closes the channel.</description>
              </item>
              <item>
                <description>The <see cref="T:Renci.SshNet.Channels.ChannelSession"/> is disposed.</description>
              </item>
              <item>
                <description>A socket error occurs sending a message to the remote host.</description>
              </item>
            </list>
            </para>
            <para>
            If the session semaphore was already obtained for this instance (and not released), then this method
            immediately returns control to the caller. This should only happen when another thread has obtain the
            session semaphore and already sent the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/>, but the remote host did not
            confirmed or rejected attempt to open the channel.
            </para>
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.ReleaseSemaphore">
            <summary>
            Releases the session semaphore.
            </summary>
            <remarks>
            When the session semaphore has already been released, or was never obtained by
            this instance, then this method does nothing.
            </remarks>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelTypes">
            <summary>
            Lists channel types as defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.Session">
            <summary>
            session
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.X11">
            <summary>
            x11
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.ForwardedTcpip">
            <summary>
            forwarded-tcpip
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.DirectTcpip">
            <summary>
            direct-tcpip
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ClientChannel.#ctor(Renci.SshNet.ISession,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Channels.ClientChannel"/> instance.
            </summary>
            <param name="session">The session.</param>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="localWindowSize">Size of the window.</param>
            <param name="localPacketSize">Size of the packet.</param>
        </member>
        <member name="E:Renci.SshNet.Channels.ClientChannel.OpenConfirmed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.ClientChannel.OpenFailed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> is received.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ClientChannel.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ClientChannel.SendMessage(Renci.SshNet.Messages.Connection.ChannelOpenMessage)">
            <summary>
            Send message to open a channel.
            </summary>
            <param name="message">Message to send</param>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">The client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">The operation timed out.</exception>
            <exception cref="T:System.InvalidOperationException">The size of the packet exceeds the maximum size defined by the protocol.</exception>
        </member>
        <member name="M:Renci.SshNet.Channels.ClientChannel.OnOpenFailure(System.UInt32,System.String,System.String)">
            <summary>
            Called when channel failed to open.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="description">The description.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ClientChannel.UnsubscribeFromSessionEvents(Renci.SshNet.ISession)">
            <summary>
            Unsubscribes the current <see cref="T:Renci.SshNet.Channels.ClientChannel"/> from session events.
            </summary>
            <param name="session">The session.</param>
            <remarks>
            Does nothing when <paramref name="session"/> is <c>null</c>.
            </remarks>
        </member>
        <member name="T:Renci.SshNet.Channels.IChannel">
            <summary>
            Represents SSH channel.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.IChannel.DataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.IChannel.Exception">
            <summary>
            Occurs when an exception is thrown when processing channel messages.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.IChannel.ExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.IChannel.RequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> is received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.IChannel.Closed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> is received.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.IChannel.LocalChannelNumber">
            <summary>
            Gets the local channel number.
            </summary>
            <value>
            The local channel number.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.IChannel.LocalPacketSize">
            <summary>
            Gets the maximum size of a data packet that we can receive using the channel.
            </summary>
            <value>
            The maximum size of a packet.
            </value>
            <remarks>
            <para>
            This is the maximum size (in bytes) we support for the data (payload) of a
            <c>SSH_MSG_CHANNEL_DATA</c> message we receive.
            </para>
            <para>
            We currently do not enforce this limit.
            </para>
            </remarks>
        </member>
        <member name="P:Renci.SshNet.Channels.IChannel.RemotePacketSize">
            <summary>
            Gets the maximum size of a data packet that can be sent using the channel.
            </summary>
            <value>
            The maximum size of data that can be sent using a <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/>
            on the current channel.
            </value>
            <exception cref="T:System.InvalidOperationException">The channel has not been opened, or the open has not yet been confirmed.</exception>
        </member>
        <member name="P:Renci.SshNet.Channels.IChannel.IsOpen">
            <summary>
            Gets a value indicating whether this channel is open.
            </summary>
            <value>
            <c>true</c> if this channel is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannel.SendData(System.Byte[])">
            <summary>
            Sends a SSH_MSG_CHANNEL_DATA message with the specified payload.
            </summary>
            <param name="data">The payload to send.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannel.SendData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a SSH_MSG_CHANNEL_DATA message with the specified payload.
            </summary>
            <param name="data">An array of <see cref="T:System.Byte"/> containing the payload to send.</param>
            <param name="offset">The zero-based offset in <paramref name="data"/> at which to begin taking data from.</param>
            <param name="size">The number of bytes of <paramref name="data"/> to send.</param>
            <remarks>
            <para>
            When the size of the data to send exceeds the maximum packet size or the remote window
            size does not allow the full data to be sent, then this method will send the data in
            multiple chunks and will wait for the remote window size to be adjusted when it's zero.
            </para>
            <para>
            This is done to support SSH servers will a small window size that do not agressively
            increase their window size. We need to take into account that there may be SSH servers
            that only increase their window size when it has reached zero.
            </para>
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannel.SendEof">
            <summary>
            Sends a SSH_MSG_CHANNEL_EOF message to the remote server.
            </summary>
            <exception cref="T:System.InvalidOperationException">The channel is closed.</exception>
        </member>
        <member name="T:Renci.SshNet.Channels.IChannelDirectTcpip">
            <summary>
            A "direct-tcpip" SSH channel.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.IChannelDirectTcpip.Exception">
            <summary>
            Occurs when an exception is thrown while processing channel messages.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.IChannelDirectTcpip.IsOpen">
            <summary>
            Gets a value indicating whether this channel is open.
            </summary>
            <value>
            <c>true</c> if this channel is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.IChannelDirectTcpip.LocalChannelNumber">
            <summary>
            Gets the local channel number.
            </summary>
            <value>
            The local channel number.
            </value>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelDirectTcpip.Open(System.String,System.UInt32,Renci.SshNet.IForwardedPort,System.Net.Sockets.Socket)">
            <summary>
            Opens a channel for a locally forwarded TCP/IP port.
            </summary>
            <param name="remoteHost">The name of the remote host to forward to.</param>
            <param name="port">The port of the remote hosts to forward to.</param>
            <param name="forwardedPort">The forwarded port for which the channel is opened.</param>
            <param name="socket">The socket to receive requests from, and send responses from the remote host to.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelDirectTcpip.Bind">
            <summary>
            Binds the channel to the remote host.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Channels.IChannelForwardedTcpip">
            <summary>
            A "forwarded-tcpip" SSH channel.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.IChannelForwardedTcpip.Exception">
            <summary>
            Occurs when an exception is thrown while processing channel messages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelForwardedTcpip.Bind(System.Net.IPEndPoint,Renci.SshNet.IForwardedPort)">
            <summary>
            Binds the channel to the specified endpoint.
            </summary>
            <param name="remoteEndpoint">The endpoint to connect to.</param>
            <param name="forwardedPort">The forwarded port for which the channel is opened.</param>
        </member>
        <member name="T:Renci.SshNet.Channels.IChannelSession">
            <summary>
            Session SSH channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.Open">
            <summary>
            Opens the channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendPseudoTerminalRequest(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
            <summary>
            Sends the pseudo terminal request.
            </summary>
            <param name="environmentVariable">The environment variable.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendX11ForwardingRequest(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Sends the X11 forwarding request.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> the it is single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendEnvironmentVariableRequest(System.String,System.String)">
            <summary>
            Sends the environment variable request.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendShellRequest">
            <summary>
            Sends the shell request.
            </summary>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendExecRequest(System.String)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="command">The command.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendBreakRequest(System.UInt32)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="breakLength">Length of the break.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendSubsystemRequest(System.String)">
            <summary>
            Sends the subsystem request.
            </summary>
            <param name="subsystem">The subsystem.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendWindowChangeRequest(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sends the window change request.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendLocalFlowRequest(System.Boolean)">
            <summary>
            Sends the local flow request.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendSignalRequest(System.String)">
            <summary>
            Sends the signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendExitStatusRequest(System.UInt32)">
            <summary>
            Sends the exit status request.
            </summary>
            <param name="exitStatus">The exit status.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendExitSignalRequest(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sends the exit signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> [core dumped].</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendEndOfWriteRequest">
            <summary>
            Sends eow@openssh.com request.
            </summary>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.IChannelSession.SendKeepAliveRequest">
            <summary>
            Sends keepalive@openssh.com request.
            </summary>
            <returns>
            <c>true</c> if request was successful; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ServerChannel.#ctor(Renci.SshNet.ISession,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Channels.ServerChannel"/> instance.
            </summary>
            <param name="session">The session.</param>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="localWindowSize">Size of the window.</param>
            <param name="localPacketSize">Size of the packet.</param>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="remoteWindowSize">The window size of the remote party.</param>
            <param name="remotePacketSize">The maximum size of a data packet that we can send to the remote party.</param>
        </member>
        <member name="T:Renci.SshNet.CipherInfo">
            <summary>
            Holds information about key size and cipher to use
            </summary>
        </member>
        <member name="P:Renci.SshNet.CipherInfo.KeySize">
            <summary>
            Gets the size of the key.
            </summary>
            <value>
            The size of the key.
            </value>
        </member>
        <member name="P:Renci.SshNet.CipherInfo.Cipher">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="M:Renci.SshNet.CipherInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Byte[],Renci.SshNet.Security.Cryptography.Cipher})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.CipherInfo"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Renci.SshNet.ClientAuthentication.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.ClientAuthentication"/> instance.
            </summary>
            <param name="partialSuccessLimit">The number of times an authentication attempt with any given <see cref="T:Renci.SshNet.IAuthenticationMethod"/> can result in <see cref="F:Renci.SshNet.AuthenticationResult.PartialSuccess"/> before it is disregarded.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="partialSuccessLimit"/> is less than one.</exception>
        </member>
        <member name="P:Renci.SshNet.ClientAuthentication.PartialSuccessLimit">
            <summary>
            Gets the number of times an authentication attempt with any given <see cref="T:Renci.SshNet.IAuthenticationMethod"/> can
            result in <see cref="F:Renci.SshNet.AuthenticationResult.PartialSuccess"/> before it is disregarded.
            </summary>
            <value>
            The number of times an authentication attempt with any given <see cref="T:Renci.SshNet.IAuthenticationMethod"/> can result
            in <see cref="F:Renci.SshNet.AuthenticationResult.PartialSuccess"/> before it is disregarded.
            </value>
        </member>
        <member name="M:Renci.SshNet.ClientAuthentication.Authenticate(Renci.SshNet.IConnectionInfoInternal,Renci.SshNet.ISession)">
            <summary>
            Attempts to authentication for a given <see cref="T:Renci.SshNet.ISession"/> using the <see cref="P:Renci.SshNet.IConnectionInfoInternal.AuthenticationMethods"/>
            of the specified <see cref="T:Renci.SshNet.IConnectionInfoInternal"/>.
            </summary>
            <param name="connectionInfo">A <see cref="T:Renci.SshNet.IConnectionInfoInternal"/> to use for authenticating.</param>
            <param name="session">The <see cref="T:Renci.SshNet.ISession"/> for which to perform authentication.</param>
        </member>
        <member name="F:Renci.SshNet.ClientAuthentication.AuthenticationState._authenticationMethodPartialSuccessRegister">
            <summary>
            Records if a given <see cref="T:Renci.SshNet.IAuthenticationMethod"/> has been tried, and how many times this resulted
            in <see cref="F:Renci.SshNet.AuthenticationResult.PartialSuccess"/>.
            </summary>
            <remarks>
            When there's no entry for a given <see cref="T:Renci.SshNet.IAuthenticationMethod"/>, then it was never tried.
            </remarks>
        </member>
        <member name="F:Renci.SshNet.ClientAuthentication.AuthenticationState._failedAuthenticationMethods">
            <summary>
            Holds the list of authentications methods that failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ClientAuthentication.AuthenticationState.RecordFailure(Renci.SshNet.IAuthenticationMethod)">
            <summary>
            Records a <see cref="F:Renci.SshNet.AuthenticationResult.Failure"/> authentication attempt for the specified
            <see cref="T:Renci.SshNet.IAuthenticationMethod"/> .
            </summary>
            <param name="authenticationMethod">An <see cref="T:Renci.SshNet.IAuthenticationMethod"/> for which to record the result of an authentication attempt.</param>
        </member>
        <member name="M:Renci.SshNet.ClientAuthentication.AuthenticationState.RecordPartialSuccess(Renci.SshNet.IAuthenticationMethod)">
            <summary>
            Records a <see cref="F:Renci.SshNet.AuthenticationResult.PartialSuccess"/> authentication attempt for the specified
            <see cref="T:Renci.SshNet.IAuthenticationMethod"/> .
            </summary>
            <param name="authenticationMethod">An <see cref="T:Renci.SshNet.IAuthenticationMethod"/> for which to record the result of an authentication attempt.</param>
        </member>
        <member name="M:Renci.SshNet.ClientAuthentication.AuthenticationState.GetPartialSuccessCount(Renci.SshNet.IAuthenticationMethod)">
            <summary>
            Returns the number of times an authentication attempt with the specified <see cref="T:Renci.SshNet.IAuthenticationMethod"/>
            has resulted in <see cref="F:Renci.SshNet.AuthenticationResult.PartialSuccess"/>.
            </summary>
            <param name="authenticationMethod">An <see cref="T:Renci.SshNet.IAuthenticationMethod"/>.</param>
            <returns>
            The number of times an authentication attempt with the specified <see cref="T:Renci.SshNet.IAuthenticationMethod"/>
            has resulted in <see cref="F:Renci.SshNet.AuthenticationResult.PartialSuccess"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ClientAuthentication.AuthenticationState.GetSupportedAuthenticationMethods(System.String[])">
            <summary>
            Returns a list of supported authentication methods that match one of the specified allowed authentication
            methods.
            </summary>
            <param name="allowedAuthenticationMethods">A list of allowed authentication methods.</param>
            <returns>
            A list of supported authentication methods that match one of the specified allowed authentication methods.
            </returns>
            <remarks>
            The authentication methods are returned in the order in which they were specified in the list that was
            used to initialize the current <see cref="T:Renci.SshNet.ClientAuthentication.AuthenticationState"/> instance.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ClientAuthentication.AuthenticationState.GetActiveAuthenticationMethods(System.Collections.Generic.List{Renci.SshNet.IAuthenticationMethod})">
            <summary>
            Returns the authentication methods from the specified list that have not yet failed.
            </summary>
            <param name="matchingAuthenticationMethods">A list of authentication methods.</param>
            <returns>
            The authentication methods from <paramref name="matchingAuthenticationMethods"/> that have not yet failed.
            </returns>
            <remarks>
            <para>
            This method first returns the authentication methods that have not yet been executed, and only then
            returns those for which an authentication attempt resulted in a <see cref="F:Renci.SshNet.AuthenticationResult.PartialSuccess"/>.
            </para>
            <para>
            Any <see cref="T:Renci.SshNet.IAuthenticationMethod"/> that has failed is skipped.
            </para>
            </remarks>
        </member>
        <member name="T:Renci.SshNet.CommandAsyncResult">
            <summary>
            Provides additional information for asynchronous command execution
            </summary>
        </member>
        <member name="M:Renci.SshNet.CommandAsyncResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.CommandAsyncResult"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.BytesReceived">
            <summary>
            Gets or sets the bytes received. If SFTP only file bytes are counted.
            </summary>
            <value>Total bytes received.</value>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.BytesSent">
            <summary>
            Gets or sets the bytes sent by SFTP.
            </summary>
            <value>Total bytes sent.</value>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <returns>true if the operation is complete; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.EndCalled">
            <summary>
            Gets a value indicating whether <see cref="M:Renci.SshNet.SshCommand.EndExecute(System.IAsyncResult)"/> was already called for this
            <see cref="T:Renci.SshNet.CommandAsyncResult"/>.
            </summary>
            <returns>
            <c>true</c> if <see cref="M:Renci.SshNet.SshCommand.EndExecute(System.IAsyncResult)"/> was already called for this <see cref="T:Renci.SshNet.CommandAsyncResult"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Common.ASCIIEncoding">
            <summary>
            Implementation of ASCII Encoding
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ASCIIEncoding"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding a set of characters from the specified character array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="index">The index of the first character to encode.</param>
            <param name="count">The number of characters to encode.</param>
            <returns>
            The number of bytes produced by encoding the specified characters.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="chars"/> is  <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="chars"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="charIndex">The index of the first character to encode.</param>
            <param name="charCount">The number of characters to encode.</param>
            <param name="bytes">The byte array to contain the resulting sequence of bytes.</param>
            <param name="byteIndex">The index at which to start writing the resulting sequence of bytes.</param>
            <returns>
            The actual number of bytes written into <paramref name="bytes"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="chars"/> is  <c>null</c>.-or- <paramref name="bytes"/> is  <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="charIndex"/> or <paramref name="charCount"/> or <paramref name="byteIndex"/> is less than zero.-or- <paramref name="charIndex"/> and <paramref name="charCount"/> do not denote a valid range in <paramref name="chars"/>.-or- <paramref name="byteIndex"/> is not a valid index in <paramref name="bytes"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="bytes"/> does not have enough capacity from <paramref name="byteIndex"/> to the end of the array to accommodate the resulting bytes.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            The number of characters produced by decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="bytes"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="bytes"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Decodes a sequence of bytes from the specified byte array into the specified character array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="byteIndex">The index of the first byte to decode.</param>
            <param name="byteCount">The number of bytes to decode.</param>
            <param name="chars">The character array to contain the resulting set of characters.</param>
            <param name="charIndex">The index at which to start writing the resulting set of characters.</param>
            <returns>
            The actual number of characters written into <paramref name="chars"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="bytes"/> is  <c>null</c>.-or- <paramref name="chars"/> is  <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="byteIndex"/> or <paramref name="byteCount"/> or <paramref name="charIndex"/> is less than zero.-or- <paramref name="byteIndex"/> and <paramref name="byteCount"/> do not denote a valid range in <paramref name="bytes"/>.-or- <paramref name="charIndex"/> is not a valid index in <paramref name="chars"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="chars"/> does not have enough capacity from <paramref name="charIndex"/> to the end of the array to accommodate the resulting characters.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            Calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount">The number of characters to encode.</param>
            <returns>
            The maximum number of bytes produced by encoding the specified number of characters.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="charCount"/> is less than zero.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.ASCIIEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            Calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount">The number of bytes to decode.</param>
            <returns>
            The maximum number of characters produced by decoding the specified number of bytes.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="byteCount"/> is less than zero.</exception>
        </member>
        <member name="T:Renci.SshNet.Common.AsyncResult">
            <summary>
            Base class to encapsulates the results of an asynchronous operation.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled">
            <summary>
            Gets or sets a value indicating whether <see cref="M:Renci.SshNet.Common.AsyncResult.EndInvoke"/> has been called on the current
            <see cref="T:Renci.SshNet.Common.AsyncResult"/>.
            </summary>
            <value>
            <c>true</c> if <see cref="M:Renci.SshNet.Common.AsyncResult.EndInvoke"/> has been called on the current <see cref="T:Renci.SshNet.Common.AsyncResult"/>;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)">
            <summary>
            Marks asynchronous operation as completed.
            </summary>
            <param name="exception">The exception.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult.EndInvoke">
            <summary>
            Waits until the asynchronous operation completes, and then returns. 
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Renci.SshNet.Common.AsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <returns>
            <c>true</c> if the operation is complete; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Renci.SshNet.Common.AsyncResult`1">
            <summary>
            Base class to encapsulates the results of an asynchronous operation that returns result.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AsyncResult`1"/> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult`1.SetAsCompleted(`0,System.Boolean)">
            <summary>
            Marks asynchronous operation as completed.
            </summary>
            <param name="result">The result.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
        </member>
        <member name="M:Renci.SshNet.Common.AsyncResult`1.EndInvoke">
            <summary>
            Waits until the asynchronous operation completes, and then returns the value generated by the asynchronous operation. 
            </summary>
            <returns>
            The invocation result.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationBannerEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner"/> event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.BannerMessage">
            <summary>
            Gets banner message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.Language">
            <summary>
            Gets banner language.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationBannerEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationBannerEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="message">Banner message.</param>
            <param name="language">Banner language.</param>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationEventArgs">
            <summary>
            Base class for authentication events.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationEventArgs.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.PasswordConnectionInfo.PasswordExpired"/> event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
            <value>
            The new password.
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPrompt">
            <summary>
            Provides prompt information when <see cref="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt"/> is raised
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Id">
            <summary>
            Gets the prompt sequence id.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.IsEchoed">
            <summary>
            Gets or sets a value indicating whether the user input should be echoed as characters are typed.
            </summary>
            <value>
              <c>true</c> if the user input should be echoed as characters are typed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Request">
            <summary>
            Gets server information request.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Response">
            <summary>
            Gets or sets server information response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPrompt.#ctor(System.Int32,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPrompt"/> class.
            </summary>
            <param name="id">The sequence id.</param>
            <param name="isEchoed">if set to <c>true</c> the user input should be echoed.</param>
            <param name="request">The request.</param>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPromptEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt"/> event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Language">
            <summary>
            Gets prompt language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Instruction">
            <summary>
            Gets prompt instruction.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Prompts">
            <summary>
            Gets server information request prompts.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPromptEventArgs.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Renci.SshNet.Common.AuthenticationPrompt})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPromptEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="instruction">The instruction.</param>
            <param name="language">The language.</param>
            <param name="prompts">The information request prompts.</param>
        </member>
        <member name="T:Renci.SshNet.Common.BigInteger">
            <summary>
            Represents an arbitrarily large signed integer.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.BitLength">
            <summary>
            Gets number of bits used by the number.
            </summary>
            <value>
            The number of the bit used.
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ModInverse(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Mods the inverse.
            </summary>
            <param name="bi">The bi.</param>
            <param name="modulus">The modulus.</param>
            <returns>
            Modulus inverted number.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.PositiveMod(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns positive remainder that results from division with two specified <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            Positive remainder that results from the division.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Random(System.Int32)">
            <summary>
            Generates a new, random <see cref="T:Renci.SshNet.Common.BigInteger"/> of the specified length.
            </summary>
            <param name="bitLength">The number of bits for the new number.</param>
            <returns>A random number of the specified length.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> structure using a 32-bit signed integer value.
            </summary>
            <param name="value">A 32-bit signed integer.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> structure using an unsigned 32-bit integer value.
            </summary>
            <param name="value">An unsigned 32-bit integer value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> structure using a 64-bit signed integer value.
            </summary>
            <param name="value">A 64-bit signed integer.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> structure with an unsigned 64-bit integer value.
            </summary>
            <param name="value">An unsigned 64-bit integer.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> structure using a double-precision floating-point value.
            </summary>
            <param name="value">A double-precision floating-point value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> structure using a single-precision floating-point value.
            </summary>
            <param name="value">A single-precision floating-point value.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> structure using a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">A decimal number.</param>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.BigInteger"/> structure using the values in a byte array.
            </summary>
            <param name="value">An array of <see cref="T:System.Byte"/> values in little-endian order.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.IsEven">
            <summary>
            Indicates whether the value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object is an even number.
            </summary>
            <value>
            <c>true</c> if the value of the BigInteger object is an even number; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.IsOne">
            <summary>
            Indicates whether the value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object is <see cref="P:Renci.SshNet.Common.BigInteger.One"/>.
            </summary>
            <value>
            <c>true</c> if the value of the <see cref="T:Renci.SshNet.Common.BigInteger"/> object is <see cref="P:Renci.SshNet.Common.BigInteger.One"/>;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.IsPowerOfTwo">
            <summary>
            Indicates whether the value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object is a power of two.
            </summary>
            <value>
            <c>true</c> if the value of the <see cref="T:Renci.SshNet.Common.BigInteger"/> object is a power of two;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.IsZero">
            <summary>
            Indicates whether the value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object is <see cref="P:Renci.SshNet.Common.BigInteger.Zero"/>.
            </summary>
            <value>
            <c>true</c> if the value of the <see cref="T:Renci.SshNet.Common.BigInteger"/> object is <see cref="P:Renci.SshNet.Common.BigInteger.Zero"/>;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.Sign">
            <summary>
            Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object.
            </summary>
            <value>
            A number that indicates the sign of the <see cref="T:Renci.SshNet.Common.BigInteger"/> object.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.MinusOne">
            <summary>
            Gets a value that represents the number negative one (-1).
            </summary>
            <value>
            An integer whose value is negative one (-1).
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.One">
            <summary>
            Gets a value that represents the number one (1).
            </summary>
            <value>
            An object whose value is one (1).
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.BigInteger.Zero">
            <summary>
            Gets a value that represents the number 0 (zero).
            </summary>
            <value>
            An integer whose value is 0 (zero).
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int32">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to a 32-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 32-bit signed integer.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt32">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to an unsigned 32-bit integer value.
            </summary>
            <param name="value">The value to convert to an unsigned 32-bit integer.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int16">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to a 16-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 16-bit signed integer.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt16">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Byte">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to an unsigned byte value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:System.Byte"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.SByte">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to a signed 8-bit value.
            </summary>
            <param name="value">The value to convert to a signed 8-bit value.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int64">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to a 64-bit signed integer value.
            </summary>
            <param name="value">The value to convert to a 64-bit signed integer.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt64">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to an unsigned 64-bit integer value.
            </summary>
            <param name="value">The value to convert to an unsigned 64-bit integer.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Double">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:System.Double"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Single">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to a single-precision floating-point value.
            </summary>
            <param name="value">The value to convert to a single-precision floating-point value.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Decimal">
            <summary>
            Defines an explicit conversion of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object to a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:System.Decimal"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int32)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt32)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int16)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 16-bit integer to a BigInteger value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt16)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Byte)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of an unsigned byte to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.SByte)~Renci.SshNet.Common.BigInteger">
            <summary>
            
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int64)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt64)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Double)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Double"/> value to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Single)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Single"/> object to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Decimal)~Renci.SshNet.Common.BigInteger">
            <summary>
            Defines an explicit conversion of a <see cref="T:System.Decimal"/> object to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to convert to a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</param>
            <returns>
            An object that contains the value of the <paramref name="value"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Addition(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Adds the values of two specified <see cref="T:Renci.SshNet.Common.BigInteger"/> objects.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>
            The sum of <paramref name="left"/> and <paramref name="right"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Subtraction(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Subtracts a <see cref="T:Renci.SshNet.Common.BigInteger"/> value from another <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>
            The result of subtracting <paramref name="right"/> from <paramref name="left"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Multiply(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Multiplies two specified <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value to multiply.</param>
            <param name="right">The second value to multiply.</param>
            <returns>
            The product of left and right.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Division(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Divides a specified <see cref="T:Renci.SshNet.Common.BigInteger"/> value by another specified <see cref="T:Renci.SshNet.Common.BigInteger"/> value by using
            integer division.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            The integral result of the division.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Modulus(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the remainder that results from division with two specified <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            The remainder that results from the division.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_UnaryNegation(Renci.SshNet.Common.BigInteger)">
            <summary>
            Negates a specified <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to negate.</param>
             <returns>
            The result of the <paramref name="value"/> parameter multiplied by negative one (-1).
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_UnaryPlus(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the value of the <see cref="T:Renci.SshNet.Common.BigInteger"/> operand.
            </summary>
            <param name="value">An integer value.</param>
            <returns>
            The value of the <paramref name="value"/> operand.
            </returns>
            <remarks>
            The sign of the operand is unchanged.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Increment(Renci.SshNet.Common.BigInteger)">
            <summary>
            Increments a <see cref="T:Renci.SshNet.Common.BigInteger"/> value by 1.
            </summary>
            <param name="value">The value to increment.</param>
            <returns>
            The value of the <paramref name="value"/> parameter incremented by 1.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Decrement(Renci.SshNet.Common.BigInteger)">
            <summary>
            Decrements a <see cref="T:Renci.SshNet.Common.BigInteger"/> value by 1.
            </summary>
            <param name="value">The value to decrement.</param>
            <returns>
            The value of the <paramref name="value"/> parameter decremented by 1.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_BitwiseAnd(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs a bitwise <c>And</c> operation on two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise <c>And</c> operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_BitwiseOr(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs a bitwise <c>Or</c> operation on two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise <c>Or</c> operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_ExclusiveOr(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs a bitwise exclusive <c>Or</c> (<c>XOr</c>) operation on two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The result of the bitwise <c>Or</c> operation.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_OnesComplement(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the bitwise one's complement of a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">An integer value.</param>
            <returns>
            The bitwise one's complement of <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LeftShift(Renci.SshNet.Common.BigInteger,System.Int32)">
            <summary>
            Shifts a <see cref="T:Renci.SshNet.Common.BigInteger"/> value a specified number of bits to the left.
            </summary>
            <param name="value">The value whose bits are to be shifted.</param>
            <param name="shift">The number of bits to shift value to the left.</param>
            <returns>
            A value that has been shifted to the left by the specified number of bits.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_RightShift(Renci.SshNet.Common.BigInteger,System.Int32)">
            <summary>
            Shifts a <see cref="T:Renci.SshNet.Common.BigInteger"/> value a specified number of bits to the right.
            </summary>
            <param name="value">The value whose bits are to be shifted.</param>
            <param name="shift">The number of bits to shift value to the right.</param>
            <returns>
            A value that has been shifted to the right by the specified number of bits.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is less than another
            <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than <paramref name="right"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is less than a 64-bit signed integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if left is <paramref name="left"/> than <paramref name="right"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than <paramref name="right"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThan(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than <paramref name="right"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is less than or equal
            to another <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than or equal to <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is less than or equal
            to a 64-bit signed integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than or equal to <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than or equal to <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is less than or equal to
            a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than or equal to <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a
            <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is less than or equal to <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is greater than another
            <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> is greater than a 64-bit signed integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is greater than a 64-bit unsigned integer.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is greater than a <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is greater than or equal
            to another <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is greater than or equal
            to a 64-bit signed integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a
            <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value is greater than or equal to a
            64-bit unsigned integer value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a
            <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> is greater than <paramref name="right"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether the values of two <see cref="T:Renci.SshNet.Common.BigInteger"/> objects are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if the <paramref name="left"/> and <paramref name="right"/> parameters have the same value;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value and a signed long integer value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if the <paramref name="left"/> and <paramref name="right"/> parameters have the same value;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a signed long integer value and a <see cref="T:Renci.SshNet.Common.BigInteger"/> value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if the <paramref name="left"/> and <paramref name="right"/> parameters have the same value;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value and an unsigned long integer value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if the <paramref name="left"/> and <paramref name="right"/> parameters have the same value;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Equality(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether an unsigned long integer value and a <see cref="T:Renci.SshNet.Common.BigInteger"/> value are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if the <paramref name="left"/> and <paramref name="right"/> parameters have the same value;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether two <see cref="T:Renci.SshNet.Common.BigInteger"/> objects have different values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,System.Int64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value and a 64-bit signed integer are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(System.Int64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:Renci.SshNet.Common.BigInteger"/> value are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,System.UInt64)">
            <summary>
            Returns a value that indicates whether a <see cref="T:Renci.SshNet.Common.BigInteger"/> value and a 64-bit unsigned integer are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.op_Inequality(System.UInt64,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:Renci.SshNet.Common.BigInteger"/> value are not equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            <c>true</c> if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance and a specified object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
            <c>true</c> if the <paramref name="obj"/> parameter is a <see cref="T:Renci.SshNet.Common.BigInteger"/> object or a type capable
            of implicit conversion to a <see cref="T:Renci.SshNet.Common.BigInteger"/> value, and its value is equal to the value of the
            current <see cref="T:Renci.SshNet.Common.BigInteger"/> object; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Equals(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns a value that indicates whether the current instance and a specified <see cref="T:Renci.SshNet.Common.BigInteger"/> object
            have the same value.
            </summary>
            <param name="other">The object to compare.</param>
            <returns>
            <c>true</c> if this <see cref="T:Renci.SshNet.Common.BigInteger"/> object and <paramref name="other"/> have the same value;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Equals(System.Int64)">
            <summary>
            Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.
            </summary>
            <param name="other">The signed 64-bit integer value to compare.</param>
            <returns>
            <c>true</c> if the signed 64-bit integer and the current instance have the same value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToString">
            <summary>
            Converts the numeric value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object to its equivalent string representation.
            </summary>
            <returns>
            The string representation of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToString(System.String)">
            <summary>
            Converts the numeric value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object to its equivalent string representation
            by using the specified format.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>
            The string representation of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> value in the format specified by the
            <paramref name="format"/> parameter.
            </returns>
            <exception cref="T:System.FormatException"><paramref name="format"/> is not a valid format string.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToString(System.IFormatProvider)">
            <summary>
            Converts the numeric value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object to its equivalent string representation
            by using the specified culture-specific formatting information. 
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
            The string representation of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> value in the format specified by the
            <paramref name="provider"/> parameter.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the numeric value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object to its equivalent string representation
            by using the specified format and culture-specific format information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
            The string representation of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> value as specified by the <paramref name="format"/>
            and <paramref name="provider"/> parameters.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Parse(System.String)">
            <summary>
            Converts the string representation of a number to its <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent.
            </summary>
            <param name="value">A string that contains the number to convert.</param>
            <returns>
            A value that is equivalent to the number specified in the <paramref name="value"/> parameter.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException"><paramref name="value"/> is not in the correct format.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
            <summary>
            Converts the string representation of a number in a specified style to its <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="style">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value"/>.</param>
            <returns>
            A value that is equivalent to the number specified in the <paramref name="value"/> parameter.
            </returns>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="style"/> is not a <see cref="T:System.Globalization.NumberStyles"/> value.</para>
            <para>-or-</para>
            <para><paramref name="style"/> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier"/> or <see cref="F:System.Globalization.NumberStyles.HexNumber"/> flag along with another value.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException"><paramref name="value"/> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number in a specified style to its <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="provider">An object that provides culture-specific formatting information about <paramref name="value"/>.</param>
            <returns>
            A value that is equivalent to the number specified in the <paramref name="value"/> parameter.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException"><paramref name="value"/> is not in the correct format.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="style">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value"/>.</param>
            <param name="provider">An object that provides culture-specific formatting information about <paramref name="value"/>.</param>
            <returns>
            A value that is equivalent to the number specified in the <paramref name="value"/> parameter.
            </returns>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="style"/> is not a <see cref="T:System.Globalization.NumberStyles"/> value.</para>
            <para>-or-</para>
            <para><paramref name="style"/> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier"/> or <see cref="F:System.Globalization.NumberStyles.HexNumber"/> flag along with another value.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException"><paramref name="value"/> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.TryParse(System.String,Renci.SshNet.Common.BigInteger@)">
            <summary>
            Tries to convert the string representation of a number to its <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent, and
            returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="value">The string representation of a number.</param>
            <param name="result">When this method returns, contains the <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent to the number that is contained in value, or zero (0) if the conversion fails. The conversion fails if the <paramref name="value"/> parameter is <c>null</c> or is not of the correct format. This parameter is passed uninitialized.</param>
            <returns>
            <c>true</c> if <paramref name="value"/> was converted successfully; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,Renci.SshNet.Common.BigInteger@)">
            <summary>
            Tries to convert the string representation of a number in a specified style and culture-specific format to its
            <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent, and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="value">The string representation of a number.</param>
            <param name="style">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="value"/>.</param>
            <param name="provider">An object that supplies culture-specific formatting information about <paramref name="value"/>.</param>
            <param name="result">When this method returns, contains the <see cref="T:Renci.SshNet.Common.BigInteger"/> equivalent to the number that is contained in value, or <see cref="P:Renci.SshNet.Common.BigInteger.Zero"/> if the conversion fails. The conversion fails if the <paramref name="value"/> parameter is <c>null</c> or is not of the correct format. This parameter is passed uninitialized.</param>
            <returns>
            <c>true</c> if <paramref name="value"/> was converted successfully; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="style"/> is not a <see cref="T:System.Globalization.NumberStyles"/> value.</para>
            <para>-or-</para>
            <para><paramref name="style"/> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier"/> or <see cref="F:System.Globalization.NumberStyles.HexNumber"/> flag along with another value.</para>
            </exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Min(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the smaller of two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            The <paramref name="left"/> or <paramref name="right"/> parameter, whichever is smaller.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Max(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the larger of two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            The <paramref name="left"/> or <paramref name="right"/> parameter, whichever is larger.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Abs(Renci.SshNet.Common.BigInteger)">
            <summary>
            Gets the absolute value of a <see cref="T:Renci.SshNet.Common.BigInteger"/> object.
            </summary>
            <param name="value">A number.</param>
            <returns>
            The absolute value of <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.DivRem(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger@)">
            <summary>
            Divides one <see cref="T:Renci.SshNet.Common.BigInteger"/> value by another, returns the result, and returns the remainder in
            an output parameter.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <param name="remainder">When this method returns, contains a <see cref="T:Renci.SshNet.Common.BigInteger"/> value that represents the remainder from the division. This parameter is passed uninitialized.</param>
            <returns>
            The quotient of the division.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Pow(Renci.SshNet.Common.BigInteger,System.Int32)">
            <summary>
            Raises a <see cref="T:Renci.SshNet.Common.BigInteger"/> value to the power of a specified value.
            </summary>
            <param name="value">The number to raise to the <paramref name="exponent"/> power.</param>
            <param name="exponent">The exponent to raise <paramref name="value"/> by.</param>
            <returns>
            The result of raising <paramref name="value"/> to the <paramref name="exponent"/> power.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ModPow(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs modulus division on a number raised to the power of another number.
            </summary>
            <param name="value">The number to raise to the <paramref name="exponent"/> power.</param>
            <param name="exponent">The exponent to raise <paramref name="value"/> by.</param>
            <param name="modulus">The number by which to divide <paramref name="value"/> raised to the <paramref name="exponent"/> power.</param>
            <returns>
            The remainder after dividing <paramref name="value"/> raised by <paramref name="exponent"/> by
            <paramref name="modulus"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="exponent"/> is negative.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.GreatestCommonDivisor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Finds the greatest common divisor of two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
            <returns>
            The greatest common divisor of <paramref name="left"/> and <paramref name="right"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Log(Renci.SshNet.Common.BigInteger,System.Double)">
            <summary>
            Returns the logarithm of a specified number in a specified base.
            </summary>
            <param name="value">A number whose logarithm is to be found.</param>
            <param name="baseValue">The base of the logarithm.</param>
            <returns>
            The base <paramref name="baseValue"/> logarithm of value, 
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The log of <paramref name="value"/> is out of range of the <see cref="T:System.Double"/> data type.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Log(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the natural (base <c>e</c>) logarithm of a specified number.
            </summary>
            <param name="value">The number whose logarithm is to be found.</param>
            <returns>
            The natural (base <c>e</c>) logarithm of <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The base 10 log of value is out of range of the <see cref="T:System.Double"/> data type.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Log10(Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the base 10 logarithm of a specified number.
            </summary>
            <param name="value">A number whose logarithm is to be found.</param>
            <returns>
            The base 10 logarithm of <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The base 10 log of value is out of range of the <see cref="T:System.Double"/> data type.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Equals(System.UInt64)">
            <summary>
            Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.
            </summary>
            <param name="other">The unsigned 64-bit integer to compare.</param>
            <returns>
            <c>true</c> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.GetHashCode">
            <summary>
            Returns the hash code for the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Add(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Adds two <see cref="T:Renci.SshNet.Common.BigInteger"/> values and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>
            The sum of <paramref name="left"/> and <paramref name="right"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Subtract(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Subtracts one <see cref="T:Renci.SshNet.Common.BigInteger"/> value from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>
            The result of subtracting <paramref name="right"/> from <paramref name="left"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Multiply(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Returns the product of two <see cref="T:Renci.SshNet.Common.BigInteger"/> values.
            </summary>
            <param name="left">The first number to multiply.</param>
            <param name="right">The second number to multiply.</param>
            <returns>
            The product of the <paramref name="left"/> and <paramref name="right"/> parameters.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Divide(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Divides one <see cref="T:Renci.SshNet.Common.BigInteger"/> value by another and returns the result.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            The quotient of the division.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Remainder(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Performs integer division on two <see cref="T:Renci.SshNet.Common.BigInteger"/> values and returns the remainder.
            </summary>
            <param name="dividend">The value to be divided.</param>
            <param name="divisor">The value to divide by.</param>
            <returns>
            The remainder after dividing <paramref name="dividend"/> by <paramref name="divisor"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Negate(Renci.SshNet.Common.BigInteger)">
            <summary>
            Negates a specified <see cref="T:Renci.SshNet.Common.BigInteger"/> value.
            </summary>
            <param name="value">The value to negate.</param>
            <returns>
            The result of the <paramref name="value"/> parameter multiplied by negative one (-1).
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates whether the value of
            this instance is less than, equal to, or greater than the value of the specified object.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
            A signed integer that indicates the relationship of the current instance to the <paramref name="obj"/> parameter,
            as shown in the following table.
            <list type="table">
                <listheader>
                    <term>Value</term>
                    <description>Condition</description>
                </listheader>
                <item>
                    <term>Less than zero</term>
                    <description>The current instance is less than <paramref name="obj"/>.</description>
                </item>
                <item>
                    <term>Zero</term>
                    <description>The current instance equals <paramref name="obj"/>.</description>
                </item>
                <item>
                    <term>Greater than zero</term>
                    <description>The current instance is greater than <paramref name="obj"/>.</description>
                </item>
            </list>
            </returns>
            <exception cref="T:System.ArgumentException"><paramref name="obj"/> is not a <see cref="T:Renci.SshNet.Common.BigInteger"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.CompareTo(Renci.SshNet.Common.BigInteger)">
            <summary>
            Compares this instance to a second <see cref="T:Renci.SshNet.Common.BigInteger"/> and returns an integer that indicates whether the
            value of this instance is less than, equal to, or greater than the value of the specified object.
            </summary>
            <param name="other">The object to compare.</param>
            <returns>
            A signed integer value that indicates the relationship of this instance to <paramref name="other"/>, as
            shown in the following table.
            <list type="table">
                <listheader>
                    <term>Value</term>
                    <description>Condition</description>
                </listheader>
                <item>
                    <term>Less than zero</term>
                    <description>The current instance is less than <paramref name="other"/>.</description>
                </item>
                <item>
                    <term>Zero</term>
                    <description>The current instance equals <paramref name="other"/>.</description>
                </item>
                <item>
                    <term>Greater than zero</term>
                    <description>The current instance is greater than <paramref name="other"/>.</description>
                </item>
            </list>
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.CompareTo(System.UInt64)">
            <summary>
            Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this
            instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.
            </summary>
            <param name="other">The unsigned 64-bit integer to compare.</param>
            <returns>
            A signed integer that indicates the relative value of this instance and <paramref name="other"/>, as shown
            in the following table.
            <list type="table">
                <listheader>
                    <term>Value</term>
                    <description>Condition</description>
                </listheader>
                <item>
                    <term>Less than zero</term>
                    <description>The current instance is less than <paramref name="other"/>.</description>
                </item>
                <item>
                    <term>Zero</term>
                    <description>The current instance equals <paramref name="other"/>.</description>
                </item>
                <item>
                    <term>Greater than zero</term>
                    <description>The current instance is greater than <paramref name="other"/>.</description>
                </item>
            </list>
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.CompareTo(System.Int64)">
            <summary>
            Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this
            instance is less than, equal to, or greater than the value of the signed 64-bit integer.
            </summary>
            <param name="other">The signed 64-bit integer to compare.</param>
            <returns>
            A signed integer that indicates the relative value of this instance and <paramref name="other"/>, as shown
            in the following table.
            <list type="table">
                <listheader>
                    <term>Value</term>
                    <description>Condition</description>
                </listheader>
                <item>
                    <term>Less than zero</term>
                    <description>The current instance is less than <paramref name="other"/>.</description>
                </item>
                <item>
                    <term>Zero</term>
                    <description>The current instance equals <paramref name="other"/>.</description>
                </item>
                <item>
                    <term>Greater than zero</term>
                    <description>The current instance is greater than <paramref name="other"/>.</description>
                </item>
            </list>
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.Compare(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>
            Compares two <see cref="T:Renci.SshNet.Common.BigInteger"/> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
            A signed integer that indicates the relative values of left and right, as shown in the following table.
            <list type="table">
                <listheader>
                    <term>Value</term>
                    <description>Condition</description>
                </listheader>
                <item>
                    <term>Less than zero</term>
                    <description><paramref name="left"/> is less than <paramref name="right"/>.</description>
                </item>
                <item>
                    <term>Zero</term>
                    <description><paramref name="left"/> equals <paramref name="right"/>.</description>
                </item>
                <item>
                    <term>Greater than zero</term>
                    <description><paramref name="left"/> is greater than <paramref name="right"/>.</description>
                </item>
            </list>
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.BigInteger.ToByteArray">
            <summary>
            Converts a <see cref="T:Renci.SshNet.Common.BigInteger"/> value to a byte array.
            </summary>
            <returns>
            The value of the current <see cref="T:Renci.SshNet.Common.BigInteger"/> object converted to an array of bytes.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelDataEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.DataReceived"/> event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelDataEventArgs.Data">
            <summary>
            Gets channel data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelDataEventArgs.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelDataEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="data">Channel data.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelEventArgs">
            <summary>
            Base class for all channel related events.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelEventArgs.ChannelNumber">
            <summary>
            Gets the channel number.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelEventArgs.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelEventArgs"/> class.
            </summary>
            <param name="channelNumber">The channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelExtendedDataEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.ExtendedDataReceived"/> events.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelExtendedDataEventArgs.#ctor(System.UInt32,System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelExtendedDataEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="data">Channel data.</param>
            <param name="dataTypeCode">Channel data type code.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelExtendedDataEventArgs.DataTypeCode">
            <summary>
            Gets the data type code.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelOpenConfirmedEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.ClientChannel.OpenConfirmed"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelOpenConfirmedEventArgs.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelOpenConfirmedEventArgs"/> class.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">The initial window size.</param>
            <param name="maximumPacketSize">The maximum packet size.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenConfirmedEventArgs.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenConfirmedEventArgs.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelOpenFailedEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.ClientChannel.OpenFailed"/> event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.ReasonCode">
            <summary>
            Gets failure reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.Description">
            <summary>
            Gets failure description.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.Language">
            <summary>
            Gets failure language.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelOpenFailedEventArgs.#ctor(System.UInt32,System.UInt32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelOpenFailedEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="reasonCode">Failure reason code.</param>
            <param name="description">Failure description.</param>
            <param name="language">Failure language.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelRequestEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.RequestReceived"/> event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelRequestEventArgs.Info">
            <summary>
            Gets request information.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelRequestEventArgs.#ctor(Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelRequestEventArgs"/> class.
            </summary>
            <param name="info">Request information.</param>
        </member>
        <member name="T:Renci.SshNet.Common.CountdownEvent">
            <summary>
            Represents a synchronization primitive that is signaled when its count reaches zero.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.CountdownEvent.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Renci.SshNet.Common.CountdownEvent"/> class with the specified count.
            </summary>
            <param name="initialCount">The number of signals initially required to set the <see cref="T:Renci.SshNet.Common.CountdownEvent"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="initialCount"/> is less than zero.</exception>
            <remarks>
            If <paramref name="initialCount"/> is <c>zero</c>, the event is created in a signaled state.
            </remarks>
        </member>
        <member name="P:Renci.SshNet.Common.CountdownEvent.CurrentCount">
            <summary>
            Gets the number of remaining signals required to set the event.
            </summary>
            <value>
            The number of remaining signals required to set the event.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.CountdownEvent.IsSet">
            <summary>
            Indicates whether the <see cref="T:Renci.SshNet.Common.CountdownEvent"/>'s current count has reached zero.
            </summary>
            <value>
            <c>true</c> if the current count is zero; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.CountdownEvent.WaitHandle">
            <summary>
            Gets a <see cref="P:Renci.SshNet.Common.CountdownEvent.WaitHandle"/> that is used to wait for the event to be set.
            </summary>
            <value>
            A <see cref="P:Renci.SshNet.Common.CountdownEvent.WaitHandle"/> that is used to wait for the event to be set.
            </value>
            <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.CountdownEvent.Signal">
            <summary>
            Registers a signal with the <see cref="T:Renci.SshNet.Common.CountdownEvent"/>, decrementing the value of <see cref="P:Renci.SshNet.Common.CountdownEvent.CurrentCount"/>.
            </summary>
            <returns>
            <c>true</c> if the signal caused the count to reach zero and the event was set; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The current instance is already set.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.CountdownEvent.AddCount">
            <summary>
            Increments the <see cref="T:Renci.SshNet.Common.CountdownEvent"/>'s current count by one.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The current instance is already set.</exception>
            <exception cref="T:System.InvalidOperationException"><see cref="P:Renci.SshNet.Common.CountdownEvent.CurrentCount"/> is equal to or greather than <see cref="F:System.Int32.MaxValue"/>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.CountdownEvent.Wait(System.TimeSpan)">
            <summary>
            Blocks the current thread until the <see cref="T:Renci.SshNet.Common.CountdownEvent"/> is set, using a <see cref="T:System.TimeSpan"/>
            to measure the timeout.
            </summary>
            <param name="timeout">A <see cref="T:System.TimeSpan"/> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan"/> that represents -1 milliseconds to wait indefinitely.</param>
            <returns>
            <c>true</c> if the <see cref="T:Renci.SshNet.Common.CountdownEvent"/> was set; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.CountdownEvent.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:Renci.SshNet.Common.CountdownEvent"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.CountdownEvent.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Renci.SshNet.Common.CountdownEvent"/>, and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Renci.SshNet.Common.DerData">
            <summary>
            Base class for DER encoded data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.DerData.IsEndOfData">
            <summary>
            Gets a value indicating whether end of data is reached.
            </summary>
            <value>
            	<c>true</c> if end of data is reached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.DerData"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.DerData"/> class.
            </summary>
            <param name="data">DER encoded data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Encode">
            <summary>
            Encodes written data as DER byte array.
            </summary>
            <returns>DER Encoded array.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.ReadBigInteger">
            <summary>
            Reads next mpint data type from internal buffer.
            </summary>
            <returns>mpint read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.ReadInteger">
            <summary>
            Reads next int data type from internal buffer.
            </summary>
            <returns>int read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(System.Boolean)">
            <summary>
            Writes BOOLEAN data into internal buffer.
            </summary>
            <param name="data">UInt32 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(System.UInt32)">
            <summary>
            Writes UInt32 data into internal buffer.
            </summary>
            <param name="data">UInt32 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.BigInteger)">
            <summary>
            Writes INTEGER data into internal buffer.
            </summary>
            <param name="data">BigInteger data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(System.Byte[])">
            <summary>
            Writes OCTETSTRING data into internal buffer.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.ObjectIdentifier)">
            <summary>
            Writes OBJECTIDENTIFIER data into internal buffer.
            </summary>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.WriteNull">
            <summary>
            Writes NULL data into internal buffer.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.DerData)">
            <summary>
            Writes DerData data into internal buffer.
            </summary>
            <param name="data">DerData data to write.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ExceptionEventArgs">
            <summary>
            Provides data for the ErrorOccured events.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ExceptionEventArgs.Exception">
            <summary>
            Gets the System.Exception that represents the error that occurred.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ExceptionEventArgs"/> class.
            </summary>
            <param name="exception">An System.Exception that represents the error that occurred.</param>
        </member>
        <member name="T:Renci.SshNet.Common.Extensions">
            <summary>
            Collection of different extension method
            </summary>
            <summary>
            Collection of different extension method specific for Silverlight
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Determines whether the specified value is null or white space.
            </summary>
            <param name="value">The value.</param>
            <returns>
            <c>true</c> if <paramref name="value"/> is null or white space; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Reverse``1(``0[])">
            <summary>
            Reverses the sequence of the elements in the entire one-dimensional <see cref="T:System.Array"/>.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> to reverse.</param>
            <returns>
            The <see cref="T:System.Array"/> with its elements reversed.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.DebugPrint(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Prints out 
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.CreateInstance``1(System.Type)">
            <summary>
            Creates an instance of the specified type using that type's default constructor.
            </summary>
            <typeparam name="T">The type to create.</typeparam>
            <param name="type">Type of the instance to create.</param>
            <returns>A reference to the newly created object.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Take(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Returns a specified number of contiguous bytes from a given offset.
            </summary>
            <param name="value">The array to return a number of bytes from.</param>
            <param name="offset">The zero-based offset in <paramref name="value"/> at which to begin taking bytes.</param>
            <param name="count">The number of bytes to take from <paramref name="value"/>.</param>
            <returns>
            A <see cref="T:System.Byte"/> array that contains the specified number of bytes at the specified offset
            of the input array.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <remarks>
            When <paramref name="offset"/> is zero and <paramref name="count"/> equals the length of <paramref name="value"/>,
            then <paramref name="value"/> is returned.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Take(System.Byte[],System.Int32)">
            <summary>
            Returns a specified number of contiguous bytes from the start of the specified byte array.
            </summary>
            <param name="value">The array to return a number of bytes from.</param>
            <param name="count">The number of bytes to take from <paramref name="value"/>.</param>
            <returns>
            A <see cref="T:System.Byte"/> array that contains the specified number of bytes at the start of the input array.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <remarks>
            When <paramref name="count"/> equals the length of <paramref name="value"/>, then <paramref name="value"/>
            is returned.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.TrimLeadingZeros(System.Byte[])">
            <summary>
            Trims the leading zero from a byte array.
            </summary>
            <param name="value">The value.</param>
            <returns>
            <paramref name="value"/> without leading zeros.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Dispose(System.Net.Sockets.Socket)">
            <summary>
            Disposes the specified socket.
            </summary>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Dispose(System.Threading.WaitHandle)">
            <summary>
            Disposes the specified handle.
            </summary>
            <param name="handle">The handle.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Extensions.Dispose(System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Disposes the specified algorithm.
            </summary>
            <param name="algorithm">The algorithm.</param>
        </member>
        <member name="T:Renci.SshNet.Common.HostKeyEventArgs">
            <summary>
            Provides data for the HostKeyReceived event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.CanTrust">
            <summary>
            Gets or sets a value indicating whether host key can be trusted.
            </summary>
            <value>
              <c>true</c> if host key can be trusted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.HostKey">
            <summary>
            Gets the host key.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.HostKeyName">
            <summary>
            Gets the host key name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.FingerPrint">
            <summary>
            Gets the finger print.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.HostKeyEventArgs.KeyLength">
            <summary>
            Gets the length of the key in bits.
            </summary>
            <value>
            The length of the key in bits.
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.HostKeyEventArgs.#ctor(Renci.SshNet.Security.KeyHostAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.HostKeyEventArgs"/> class.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ObjectIdentifier">
            <summary>
            Describes object identifier for DER encoding
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ObjectIdentifier.Identifiers">
            <summary>
            Gets the object identifier.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ObjectIdentifier.#ctor(System.UInt64[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ObjectIdentifier"/> class.
            </summary>
            <param name="identifiers">The identifiers.</param>
        </member>
        <member name="T:Renci.SshNet.Common.Pack">
            <summary>
            Provides convenience methods for conversion to and from both Big Endian and Little Endian.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.LittleEndianToUInt16(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt16" />.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.LittleEndianToUInt32(System.Byte[],System.Int32)">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.UInt32" />.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.LittleEndianToUInt32(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt32" />.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.LittleEndianToUInt64(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt64" />.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.UInt16ToLittleEndian(System.UInt16)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="value">The number to convert.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.UInt16ToLittleEndian(System.UInt16,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.UInt32ToLittleEndian(System.UInt32)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="value">The number to convert.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.UInt32ToLittleEndian(System.UInt32,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.UInt32ToLittleEndian(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.UInt64ToLittleEndian(System.UInt64)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="value">The number to convert.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.UInt64ToLittleEndian(System.UInt64,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.UInt64ToBigEndian(System.UInt64)">
            <summary>
            Returns the specified 64-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.BigEndianToUInt16(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt16" />.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.BigEndianToUInt32(System.Byte[],System.Int32)">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns>Converted <see cref="T:System.UInt32" />.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.BigEndianToUInt32(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt32" />.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.Pack.BigEndianToUInt64(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>Converted <see cref="T:System.UInt64" />.</returns>
        </member>
        <member name="T:Renci.SshNet.Common.PipeStream">
            <summary>
            PipeStream is a thread-safe read/write data stream for use between two threads in a 
            single-producer/single-consumer type problem.
            </summary>
            <version>2006/10/13 1.0</version>
            <remarks>Update on 2008/10/9 1.1 - uses Monitor instead of Manual Reset events for more elegant synchronicity.</remarks>
            <license>
            Copyright (c) 2006 James Kolpack (james dot kolpack at google mail)
            
            Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
            associated documentation files (the "Software"), to deal in the Software without restriction, 
            including without limitation the rights to use, copy, modify, merge, publish, distribute, 
            sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is 
            furnished to do so, subject to the following conditions:
            
            The above copyright notice and this permission notice shall be included in all copies or 
            substantial portions of the Software.
            
            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
            INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
            PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
            LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
            OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
            OTHER DEALINGS IN THE SOFTWARE.
            </license>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._buffer">
            <summary>
            Queue of bytes provides the datastructure for transmitting from an
            input stream to an output stream.
            </summary>
            <remarks>Possible more effecient ways to accomplish this.</remarks>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._isFlushed">
            <summary>
            Indicates that the input stream has been flushed and that
            all remaining data should be written to the output stream.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._maxBufferLength">
            <summary>
            Maximum number of bytes to store in the buffer.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._canBlockLastRead">
            <summary>
            Setting this to true will cause Read() to block if it appears
            that it will run out of data.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._isDisposed">
            <summary>
            Indicates whether the current <see cref="T:Renci.SshNet.Common.PipeStream"/> is disposed.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.MaxBufferLength">
            <summary>
            Gets or sets the maximum number of bytes to store in the buffer.
            </summary>
            <value>The length of the max buffer.</value>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.BlockLastReadBuffer">
            <summary>
            Gets or sets a value indicating whether to block last read method before the buffer is empty.
            When true, Read() will block until it can fill the passed in buffer and count.
            When false, Read() will not block, returning all the available buffer data.
            </summary>
            <remarks>
            Setting to true will remove the possibility of ending a stream reader prematurely.
            </remarks>
            <value>
            	<c>true</c> if block last read method before the buffer is empty; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <remarks>
            Once flushed, any subsequent read operations no longer block until requested bytes are available. Any write operation reactivates blocking
            reads.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <returns>
            The new position within the current stream.
            </returns>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the stream is closed or end of the stream has been reached.
            </returns>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.ReadAvailable(System.Int32)">
            <summary>
            Returns true if there are
            </summary>
            <param name="count">The count.</param>
            <returns><c>True</c> if data available; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Stream and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
            <remarks>
            Disposing a <see cref="T:Renci.SshNet.Common.PipeStream"/> will interrupt blocking read and write operations.
            </remarks>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>
            true if the stream supports reading; otherwise, false.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanSeek">
             <summary>
             When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
             </summary>
             <returns>
             <c>true</c> if the stream supports seeking; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>
            <c>true</c> if the stream supports writing; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="T:Renci.SshNet.Common.PortForwardEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.ForwardedPort.RequestReceived"/> event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorHost">
            <summary>
            Gets request originator host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorPort">
            <summary>
            Gets request originator port.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.PortForwardEventArgs.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.PortForwardEventArgs"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> is not within <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.PosixPath.GetFileName(System.String)">
            <summary>
            Gets the file name part of a given POSIX path.
            </summary>
            <param name="path">The POSIX path to get the file name for.</param>
            <returns>
            The file name part of <paramref name="path"/>.
            </returns>
            <exception cref="T:System.NullReferenceException"><paramref name="path"/> is <c>null</c>.</exception>
            <remarks>
            <para>
            If <paramref name="path"/> contains no forward slash, then <paramref name="path"/>
            is returned.
            </para>
            <para>
            If path has a trailing slash, but <see cref="M:Renci.SshNet.Common.PosixPath.GetFileName(System.String)"/> return a zero-length string.
            </para>
            </remarks>
        </member>
        <member name="T:Renci.SshNet.Common.ProxyException">
            <summary>
            The exception that is thrown when a proxy connection cannot be established.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ProxyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ProxyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ProxyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ScpDownloadEventArgs">
            <summary>
            Provides data for the Downloading event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpDownloadEventArgs.Filename">
            <summary>
            Gets the downloaded filename.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpDownloadEventArgs.Size">
            <summary>
            Gets the downloaded file size.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpDownloadEventArgs.Downloaded">
            <summary>
            Gets number of downloaded bytes so far.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ScpDownloadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpDownloadEventArgs"/> class.
            </summary>
            <param name="filename">The downloaded filename.</param>
            <param name="size">The downloaded file size.</param>
            <param name="downloaded">The number of downloaded bytes so far.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ScpException">
            <summary>
            The exception that is thrown when SCP error occurred.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ScpException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ScpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ScpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ScpUploadEventArgs">
            <summary>
            Provides data for the Uploading event.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpUploadEventArgs.Filename">
            <summary>
            Gets the uploaded filename.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpUploadEventArgs.Size">
            <summary>
            Gets the uploaded file size.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ScpUploadEventArgs.Uploaded">
            <summary>
            Gets number of uploaded bytes so far.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ScpUploadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ScpUploadEventArgs"/> class.
            </summary>
            <param name="filename">The uploaded filename.</param>
            <param name="size">The uploaded file size.</param>
            <param name="uploaded">The number of uploaded bytes so far.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SemaphoreLight">
            <summary>
            Light implementation of SemaphoreSlim.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/> class, specifying 
            the initial number of requests that can be granted concurrently.
            </summary>
            <param name="initialCount">The initial number of requests for the semaphore that can be granted concurrently.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="initialCount"/> is a negative number.</exception>
        </member>
        <member name="P:Renci.SshNet.Common.SemaphoreLight.CurrentCount">
            <summary>
            Gets the current count of the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.SemaphoreLight.AvailableWaitHandle">
            <summary>
            Returns a <see cref="T:System.Threading.WaitHandle"/> that can be used to wait on the semaphore.
            </summary>
            <value>
            A <see cref="T:System.Threading.WaitHandle"/> that can be used to wait on the semaphore.
            </value>
            <remarks>
            A successful wait on the <see cref="P:Renci.SshNet.Common.SemaphoreLight.AvailableWaitHandle"/> does not imply a successful
            wait on the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/> itself. It should be followed by a true wait
            on the semaphore.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Release">
            <summary>
            Exits the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/> once.
            </summary>
            <returns>The previous count of the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Release(System.Int32)">
            <summary>
            Exits the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/> a specified number of times.
            </summary>
            <param name="releaseCount">The number of times to exit the semaphore.</param>
            <returns>
            The previous count of the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Wait">
            <summary>
            Blocks the current thread until it can enter the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Wait(System.Int32)">
            <summary>
            Blocks the current thread until it can enter the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>, using a 32-bit signed
            integer that specifies the timeout.
            </summary>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Infinite(-1) to wait indefinitely.</param>
            <returns>
            <c>true</c> if the current thread successfully entered the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Wait(System.TimeSpan)">
            <summary>
            Blocks the current thread until it can enter the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>, using a <see cref="T:System.TimeSpan"/>
            to specify the timeout.
            </summary>
            <param name="timeout">A <see cref="T:System.TimeSpan"/> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan"/> that represents -1 milliseconds to wait indefinitely.</param>
            <returns>
            <c>true</c> if the current thread successfully entered the <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Finalize">
            <summary>
            Finalizes the current <see cref="T:Renci.SshNet.Common.SemaphoreLight"/>.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SemaphoreLight.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SftpPathNotFoundException">
            <summary>
            The exception that is thrown when file or directory is not found.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SftpPermissionDeniedException">
            <summary>
            The exception that is thrown when operation permission is denied.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.ShellDataEventArgs">
            <summary>
            Provides data for Shell DataReceived event
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ShellDataEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ShellDataEventArgs.Line">
            <summary>
            Gets the line data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ShellDataEventArgs.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ShellDataEventArgs"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ShellDataEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ShellDataEventArgs"/> class.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SshAuthenticationException">
            <summary>
            The exception that is thrown when authentication failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SshConnectionException">
            <summary>
            The exception that is thrown when connection was terminated.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.SshConnectionException.DisconnectReason">
            <summary>
            Gets the disconnect reason if provided by the server or client. Otherwise None.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="disconnectReasonCode">The disconnect reason code.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="disconnectReasonCode">The disconnect reason code.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SshData">
            <summary>
            Base ssh data serialization type
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.SshData.DataStream">
            <summary>
            Gets the underlying <see cref="T:Renci.SshNet.Common.SshDataStream"/> that is used for reading and writing SSH data.
            </summary>
            <value>
            The underlying <see cref="T:Renci.SshNet.Common.SshDataStream"/> that is used for reading and writing SSH data.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.SshData.IsEndOfData">
            <summary>
            Gets a value indicating whether all data from the buffer has been read.
            </summary>
            <value>
            <c>true</c> if this instance is end of data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.SshData.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.GetBytes">
            <summary>
            Gets data bytes array.
            </summary>
            <returns>
            A <see cref="T:System.Byte"/> array representation of data structure.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.WriteBytes(Renci.SshNet.Common.SshDataStream)">
            <summary>
            Writes the current message to the specified <see cref="T:Renci.SshNet.Common.SshDataStream"/>.
            </summary>
            <param name="stream">The <see cref="T:Renci.SshNet.Common.SshDataStream"/> to write the message to.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Load(System.Byte[])">
            <summary>
            Loads data from specified bytes.
            </summary>
            <param name="data">Bytes array.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Load(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Loads data from the specified buffer.
            </summary>
            <param name="data">Bytes array.</param>
            <param name="offset">The zero-based offset in <paramref name="data"/> at which to begin reading SSH data.</param>
            <param name="count">The number of bytes to load.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBytes">
            <summary>
            Reads all data left in internal buffer at current position.
            </summary>
            <returns>An array of bytes containing the remaining data in the internal buffer.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)">
            <summary>
            Reads next specified number of bytes data type from internal buffer.
            </summary>
            <param name="length">Number of bytes to read.</param>
            <returns>An array of bytes that was read from the internal buffer.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is greater than the internal buffer size.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadByte">
            <summary>
            Reads next byte data type from internal buffer.
            </summary>
            <returns>Byte read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBoolean">
            <summary>
            Reads next boolean data type from internal buffer.
            </summary>
            <returns>Boolean read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt16">
            <summary>
            Reads next uint16 data type from internal buffer.
            </summary>
            <returns>uint16 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt32">
            <summary>
            Reads next uint32 data type from internal buffer.
            </summary>
            <returns>uint32 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt64">
            <summary>
            Reads next uint64 data type from internal buffer.
            </summary>
            <returns>uint64 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadString(System.Text.Encoding)">
            <summary>
            Reads next string data type from internal buffer using the specific encoding.
            </summary>
            <returns>
            The <see cref="T:System.String"/> read.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBinary">
            <summary>
            Reads next data type as byte array from internal buffer.
            </summary>
            <returns>
            The bytes read.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadNamesList">
            <summary>
            Reads next name-list data type from internal buffer.
            </summary>
            <returns>
            String array or read data.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadExtensionPair">
            <summary>
            Reads next extension-pair data type from internal buffer.
            </summary>
            <returns>Extensions pair dictionary.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Byte[])">
            <summary>
            Writes bytes array data into internal buffer.
            </summary>
            <param name="data">Byte array data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current SSH data stream and advances the current position
            within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method write <paramref name="count"/> bytes from buffer to the current SSH data stream.</param>
            <param name="offset">The zero-based offset in <paramref name="buffer"/> at which to begin writing bytes to the SSH data stream.</param>
            <param name="count">The number of bytes to be written to the current SSH data stream.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Byte)">
            <summary>
            Writes <see cref="T:System.Byte"/> data into internal buffer.
            </summary>
            <param name="data"><see cref="T:System.Byte"/> data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Boolean)">
            <summary>
            Writes <see cref="T:System.Boolean"/> into internal buffer.
            </summary>
            <param name="data"><see cref="T:System.Boolean" /> data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.UInt32)">
            <summary>
            Writes <see cref="T:System.UInt32"/> data into internal buffer.
            </summary>
            <param name="data"><see cref="T:System.UInt32"/> data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.UInt64)">
            <summary>
            Writes <see cref="T:System.UInt64" /> data into internal buffer.
            </summary>
            <param name="data"><see cref="T:System.UInt64"/> data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.String)">
            <summary>
            Writes <see cref="T:System.String"/> data into internal buffer using default encoding.
            </summary>
            <param name="data"><see cref="T:System.String"/> data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.String,System.Text.Encoding)">
            <summary>
            Writes <see cref="T:System.String"/> data into internal buffer using the specified encoding.
            </summary>
            <param name="data"><see cref="T:System.String"/> data to write.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="encoding"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])">
            <summary>
            Writes data into internal buffer.
            </summary>
            <param name="buffer">The data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.WriteBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes data into internal buffer.
            </summary>
            <param name="buffer">An array of bytes. This method write <paramref name="count"/> bytes from buffer to the current SSH data stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin writing bytes to the SSH data stream.</param>
            <param name="count">The number of bytes to be written to the current SSH data stream.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)">
            <summary>
            Writes mpint data into internal buffer.
            </summary>
            <param name="data">mpint data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.String[])">
            <summary>
            Writes name-list data into internal buffer.
            </summary>
            <param name="data">name-list data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes extension-pair data into internal buffer.
            </summary>
            <param name="data">extension-pair data to write.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SshDataStream">
            <summary>
            Specialized <see cref="T:System.IO.MemoryStream"/> for reading and writing data SSH data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshDataStream"/> class with an expandable capacity initialized
            as specified.
            </summary>
            <param name="capacity">The initial size of the internal array in bytes.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new non-resizable instance of the <see cref="T:Renci.SshNet.Common.SshDataStream"/> class based on the specified byte array.
            </summary>
            <param name="buffer">The array of unsigned bytes from which to create the current stream.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new non-resizable instance of the <see cref="T:Renci.SshNet.Common.SshDataStream"/> class based on the specified byte array.
            </summary>
            <param name="buffer">The array of unsigned bytes from which to create the current stream.</param>
            <param name="offset">The zero-based offset in <paramref name="buffer"/> at which to begin reading SSH data.</param>
            <param name="count">The number of bytes to load.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
        </member>
        <member name="P:Renci.SshNet.Common.SshDataStream.IsEndOfData">
            <summary>
            Gets a value indicating whether all data from the SSH data stream has been read.
            </summary>
            <value>
            <c>true</c> if this instance is end of data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.Write(System.UInt32)">
            <summary>
            Writes an <see cref="T:System.UInt32"/> to the SSH data stream.
            </summary>
            <param name="value"><see cref="T:System.UInt32"/> data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.Write(System.UInt64)">
            <summary>
            Writes an <see cref="T:System.UInt64"/> to the SSH data stream.
            </summary>
            <param name="value"><see cref="T:System.UInt64"/> data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.Write(Renci.SshNet.Common.BigInteger)">
            <summary>
            Writes a <see cref="T:Renci.SshNet.Common.BigInteger"/> into the SSH data stream.
            </summary>
            <param name="data">The <see cref="T:Renci.SshNet.Common.BigInteger" /> to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.Write(System.Byte[])">
            <summary>
            Writes bytes array data into the SSH data stream.
            </summary>
            <param name="data">Byte array data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.ReadBinary">
            <summary>
            Reads a byte array from the SSH data stream.
            </summary>
            <returns>
            The byte array read from the SSH data stream.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.WriteBinary(System.Byte[])">
            <summary>
            Writes a buffer preceded by its length into the SSH data stream.
            </summary>
            <param name="buffer">The data to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.WriteBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a buffer preceded by its length into the SSH data stream.
            </summary>
            <param name="buffer">An array of bytes. This method write <paramref name="count"/> bytes from buffer to the current SSH data stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin writing bytes to the SSH data stream.</param>
            <param name="count">The number of bytes to be written to the current SSH data stream.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.Write(System.String,System.Text.Encoding)">
            <summary>
            Writes string data to the SSH data stream using the specified encoding.
            </summary>
            <param name="s">The string data to write.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="s"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="encoding"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.ReadBigInt">
            <summary>
            Reads a <see cref="T:Renci.SshNet.Common.BigInteger"/> from the SSH datastream.
            </summary>
            <returns>
            The <see cref="T:Renci.SshNet.Common.BigInteger"/> read from the SSH data stream.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.ReadUInt32">
            <summary>
            Reads the next <see cref="T:System.UInt32"/> data type from the SSH data stream.
            </summary>
            <returns>
            The <see cref="T:System.UInt32"/> read from the SSH data stream.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.ReadUInt64">
            <summary>
            Reads the next <see cref="T:System.UInt64"/> data type from the SSH data stream.
            </summary>
            <returns>
            The <see cref="T:System.UInt64"/> read from the SSH data stream.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.ReadString(System.Text.Encoding)">
            <summary>
            Reads the next <see cref="T:System.String"/> data type from the SSH data stream.
            </summary>
            <returns>
            The <see cref="T:System.String"/> read from the SSH data stream.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.ReadBytes(System.Int32)">
            <summary>
            Reads next specified number of bytes data type from internal buffer.
            </summary>
            <param name="length">Number of bytes to read.</param>
            <returns>
            An array of bytes that was read from the internal buffer.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is greater than the internal buffer size.</exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshDataStream.ToArray">
            <summary>
            Writes the stream contents to a byte array, regardless of the <see cref="P:System.IO.MemoryStream.Position"/>.
            </summary>
            <returns>
            This method returns the contents of the <see cref="T:Renci.SshNet.Common.SshDataStream"/> as a byte array.
            </returns>
            <remarks>
            If the current instance was constructed on a provided byte array, a copy of the section of the array
            to which this instance has access is returned.
            </remarks>
        </member>
        <member name="T:Renci.SshNet.Common.SshException">
            <summary>
            The exception that is thrown when SSH exception occurs.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SshOperationTimeoutException">
            <summary>
            The exception that is thrown when operation is timed out.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException">
            <summary>
            The exception that is thrown when pass phrase for key file is empty or null
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Renci.SshNet.Common.TerminalModes">
            <summary>
            Specifies the initial assignments of the opcode values that are used in the 'encoded terminal modes' valu
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.TTY_OP_END">
            <summary>
            Indicates end of options.
            </summary> 
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VINTR">
            <summary>
            Interrupt character; 255 if none.  Similarly for the other characters.  Not all of these characters are supported on all systems.
            </summary> 
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VQUIT">
            <summary>
            The quit character (sends SIGQUIT signal on POSIX systems).
            </summary> 
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VERASE">
            <summary>
            Erase the character to left of the cursor. 
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VKILL">
            <summary>
            Kill the current input line.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VEOF">
            <summary>
            End-of-file character (sends EOF from the terminal).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VEOL">
            <summary>
            End-of-line character in addition to carriage return and/or linefeed.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VEOL2">
            <summary>
            Additional end-of-line character.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSTART">
            <summary>
            Continues paused output (normally control-Q).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSTOP">
            <summary>
            Pauses output (normally control-S).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSUSP">
            <summary>
            Suspends the current program.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VDSUSP">
            <summary>
            Another suspend character.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VREPRINT">
            <summary>
            Reprints the current input line.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VWERASE">
            <summary>
            Erases a word left of cursor.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VLNEXT">
            <summary>
            Enter the next character typed literally, even if it is a special character
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VFLUSH">
            <summary>
            Character to flush output.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSWTCH">
            <summary>
            Switch to a different shell layer.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VSTATUS">
            <summary>
            Prints system status line (load, command, pid, etc).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.VDISCARD">
            <summary>
            Toggles the flushing of terminal output.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IGNPAR">
            <summary>
            The ignore parity flag.  The parameter SHOULD be 0 if this flag is FALSE, and 1 if it is TRUE.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.PARMRK">
            <summary>
            Mark parity and framing errors.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.INPCK">
            <summary>
            Enable checking of parity errors.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ISTRIP">
            <summary>
            Strip 8th bit off characters.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.INLCR">
            <summary>
            Map NL into CR on input.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IGNCR">
            <summary>
            Ignore CR on input.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ICRNL">
            <summary>
            Map CR to NL on input.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IUCLC">
            <summary>
            Translate uppercase characters to lowercase.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IXON">
            <summary>
            Enable output flow control.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IXANY">
            <summary>
            Any char will restart after stop.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IXOFF">
            <summary>
            Enable input flow control.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IMAXBEL">
            <summary>
            Ring bell on input queue full.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ISIG">
            <summary>
            Enable signals INTR, QUIT, [D]SUSP.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ICANON">
            <summary>
            Canonicalize input lines.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.XCASE">
            <summary>
            Enable input and output of uppercase characters by preceding their lowercase equivalents with "\".
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHO">
            <summary>
            Enable echoing.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHOE">
            <summary>
            Visually erase chars.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHOK">
            <summary>
            Kill character discards current line.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHONL">
            <summary>
            Echo NL even if ECHO is off.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.NOFLSH">
            <summary>
            Don't flush after interrupt.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.TOSTOP">
            <summary>
            Stop background jobs from output.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.IEXTEN">
            <summary>
            Enable extensions.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHOCTL">
            <summary>
            Echo control characters as ^(Char).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ECHOKE">
            <summary>
            Visual erase for line kill.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.PENDIN">
            <summary>
            Retype pending input.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.OPOST">
            <summary>
            Enable output processing.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.OLCUC">
            <summary>
            Convert lowercase to uppercase.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ONLCR">
            <summary>
            Map NL to CR-NL.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.OCRNL">
            <summary>
            Translate carriage return to newline (output).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ONOCR">
            <summary>
            Translate newline to carriage return-newline (output).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.ONLRET">
            <summary>
            Newline performs a carriage return (output).
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.CS7">
            <summary>
            7 bit mode.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.CS8">
            <summary>
            8 bit mode.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.PARENB">
            <summary>
            Parity enable.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.PARODD">
            <summary>
            Odd parity, else even.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.TTY_OP_ISPEED">
            <summary>
            Specifies the input baud rate in bits per second.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.TerminalModes.TTY_OP_OSPEED">
            <summary>
            Specifies the output baud rate in bits per second.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.CompressionMode">
            <summary>
            Specifies compression modes
            </summary>
        </member>
        <member name="F:Renci.SshNet.Compression.CompressionMode.Compress">
            <summary>
            Specifies that content should be compressed.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Compression.CompressionMode.Decompress">
            <summary>
            Specifies that content should be decompressed.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Compressor">
            <summary>
            Represents base class for compression algorithm implementation
            </summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Compressor.IsActive">
            <summary>
            Gets or sets a value indicating whether compression is active.
            </summary>
            <value>
              <c>true</c> if compression is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Compression.Compressor.Session">
            <summary>
            Gets the session.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Compression.Compressor"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Compress(System.Byte[])">
            <summary>
            Compresses the specified data.
            </summary>
            <param name="data">Data to compress.</param>
            <returns>Compressed data</returns>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Compress(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Compresses the specified data.
            </summary>
            <param name="data">Data to compress.</param>
            <param name="offset">The zero-based byte offset in <paramref name="data"/> at which to begin reading the data to compress. </param>
            <param name="length">The number of bytes to be compressed. </param>
            <returns>
            The compressed data.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified data.
            </summary>
            <param name="data">Compressed data.</param>
            <returns>
            The decompressed data.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Decompress(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decompresses the specified data.
            </summary>
            <param name="data">Compressed data.</param>
            <param name="offset">The zero-based byte offset in <paramref name="data"/> at which to begin reading the data to decompress. </param>
            <param name="length">The number of bytes to be read from the compressed data. </param>
            <returns>
            The decompressed data.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the <see cref="T:Renci.SshNet.Compression.Compressor"/> is reclaimed
            by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Zlib">
            <summary>
            Represents "zlib" compression implementation
            </summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Zlib.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Zlib.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="T:Renci.SshNet.Compression.ZlibOpenSsh">
            <summary>
            Represents "zlib@openssh.org" compression implementation
            </summary>
        </member>
        <member name="P:Renci.SshNet.Compression.ZlibOpenSsh.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibOpenSsh.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="T:Renci.SshNet.Compression.ZlibStream">
            <summary>
            Implements Zlib compression algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibStream.#ctor(System.IO.Stream,Renci.SshNet.Compression.CompressionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Compression.ZlibStream" /> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="T:Renci.SshNet.ConnectionInfo">
            <summary>
            Represents remote connection information class.
            </summary>
            <remarks>
            This class is NOT thread-safe. Do not use the same <see cref="T:Renci.SshNet.ConnectionInfo"/> with multiple
            client instances.
            </remarks>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.KeyExchangeAlgorithms">
            <summary>
            Gets supported key exchange algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Encryptions">
            <summary>
            Gets supported encryptions for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.HmacAlgorithms">
            <summary>
            Gets supported hash algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.HostKeyAlgorithms">
            <summary>
            Gets supported host key algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.AuthenticationMethods">
            <summary>
            Gets supported authentication methods for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CompressionAlgorithms">
            <summary>
            Gets supported compression algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ChannelRequests">
            <summary>
            Gets the supported channel requests for this connection.
            </summary>
            <value>
            The supported channel requests for this connection.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.IsAuthenticated">
            <summary>
            Gets a value indicating whether connection is authenticated.
            </summary>
            <value>
            <c>true</c> if connection is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Host">
            <summary>
            Gets connection host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Port">
            <summary>
            Gets connection port.
            </summary>
            <value>
            The connection port. The default value is 22.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Username">
            <summary>
            Gets connection username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyType">
            <summary>
            Gets proxy type.
            </summary>
            <value>
            The type of the proxy.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyHost">
            <summary>
            Gets proxy connection host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyPort">
            <summary>
            Gets proxy connection port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyUsername">
            <summary>
            Gets proxy connection username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ProxyPassword">
            <summary>
            Gets proxy connection password.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Timeout">
            <summary>
            Gets or sets connection timeout.
            </summary>
            <value>
            The connection timeout. The default value is 30 seconds.
            </value>
            <example>
              <code source="..\..\src\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient Connect Timeout" language="C#" title="Specify connection timeout" />
            </example>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Encoding">
            <summary>
            Gets or sets the character encoding.
            </summary>
            <value>
            The character encoding. The default is <see cref="P:System.Text.Encoding.UTF8"/>.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.RetryAttempts">
            <summary>
            Gets or sets number of retry attempts when session channel creation failed.
            </summary>
            <value>
            The number of retry attempts when session channel creation failed. The default
            value is 10.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.MaxSessions">
            <summary>
            Gets or sets maximum number of session channels to be open simultaneously.
            </summary>
            <value>
            The maximum number of session channels to be open simultaneously. The default
            value is 10.
            </value>
        </member>
        <member name="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner">
            <summary>
            Occurs when authentication banner is sent by the server.
            </summary>
            <example>
                <code source="..\..\src\Renci.SshNet.Tests\Classes\PasswordConnectionInfoTest.cs" region="Example PasswordConnectionInfo AuthenticationBanner" language="C#" title="Display authentication banner" />
            </example>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentKeyExchangeAlgorithm">
            <summary>
            Gets the current key exchange algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentServerEncryption">
            <summary>
            Gets the current server encryption.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentClientEncryption">
            <summary>
            Gets the current client encryption.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentServerHmacAlgorithm">
            <summary>
            Gets the current server hash algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentClientHmacAlgorithm">
            <summary>
            Gets the current client hash algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentHostKeyAlgorithm">
            <summary>
            Gets the current host key algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentServerCompressionAlgorithm">
            <summary>
            Gets the current server compression algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ServerVersion">
            <summary>
            Gets the server version.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ClientVersion">
            <summary>
            Get the client version.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CurrentClientCompressionAlgorithm">
            <summary>
            Gets the current client compression algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="username">The username.</param>
            <param name="authenticationMethods">The authentication methods.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="host"/> is a zero-length string.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="username" /> is <c>null</c>, a zero-length string or contains only whitespace characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="authenticationMethods"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">No <paramref name="authenticationMethods"/> specified.</exception>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="username">The username.</param>
            <param name="authenticationMethods">The authentication methods.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="username" /> is <c>null</c>, a zero-length string or contains only whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> is not within <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="authenticationMethods"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">No <paramref name="authenticationMethods"/> specified.</exception>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ConnectionInfo" /> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="authenticationMethods">The authentication methods.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="username" /> is <c>null</c>, a zero-length string or contains only whitespace characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> is not within <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="proxyType"/> is not <see cref="F:Renci.SshNet.ProxyTypes.None"/> and <paramref name="proxyHost" /> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="proxyType"/> is not <see cref="F:Renci.SshNet.ProxyTypes.None"/> and <paramref name="proxyPort" /> is not within <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="authenticationMethods"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">No <paramref name="authenticationMethods"/> specified.</exception>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.Authenticate(Renci.SshNet.ISession,Renci.SshNet.IServiceFactory)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to be authenticated.</param>
            <param name="serviceFactory">The factory to use for creating new services.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceFactory"/> is <c>null</c>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshAuthenticationException">No suitable authentication method found to complete authentication, or permission denied.</exception>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.Renci#SshNet#IConnectionInfoInternal#UserAuthenticationBannerReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.BannerMessage})">
            <summary>
            Signals that an authentication banner message was received from the server.
            </summary>
            <param name="sender">The session in which the banner message was received.</param>
            <param name="e">The banner message.{</param>
        </member>
        <member name="T:Renci.SshNet.ExpectAction">
            <summary>
            Specifies behavior for expected expression
            </summary>
        </member>
        <member name="P:Renci.SshNet.ExpectAction.Expect">
            <summary>
            Gets the expected regular expression.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ExpectAction.Action">
            <summary>
            Gets the action to perform when expected expression is found.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ExpectAction.#ctor(System.Text.RegularExpressions.Regex,System.Action{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ExpectAction"/> class.
            </summary>
            <param name="expect">The expect regular expression.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="expect"/> or <paramref name="action"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.ExpectAction.#ctor(System.String,System.Action{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ExpectAction"/> class.
            </summary>
            <param name="expect">The expect expression.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="expect"/> or <paramref name="action"/> is <c>null</c>.</exception>
        </member>
        <member name="T:Renci.SshNet.ExpectAsyncResult">
            <summary>
            Provides additional information for asynchronous command execution
            </summary>
        </member>
        <member name="M:Renci.SshNet.ExpectAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ExpectAsyncResult" /> class.
            </summary>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="T:Renci.SshNet.ForwardedPort">
            <summary>
            Base class for port forwarding functionality.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.Session">
            <summary>
            Gets or sets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="E:Renci.SshNet.ForwardedPort.Closing">
            <summary>
            The <see cref="E:Renci.SshNet.ForwardedPort.Closing"/> event occurs as the forwarded port is being stopped.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ForwardedPort.Renci#SshNet#IForwardedPort#Closing">
            <summary>
            The <see cref="E:Renci.SshNet.IForwardedPort.Closing"/> event occurs as the forwarded port is being stopped.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.IsStarted">
            <summary>
            Gets a value indicating whether port forwarding is started.
            </summary>
            <value>
            <c>true</c> if port forwarding is started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.ForwardedPort.Exception">
            <summary>
            Occurs when an exception is thrown.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ForwardedPort.RequestReceived">
            <summary>
            Occurs when a port forwarding request is received.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Start">
            <summary>
            Starts port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Stop">
            <summary>
            Stops port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.StartPort">
            <summary>
            Starts port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.StopPort(System.TimeSpan)">
            <summary>
            Stops port forwarding, and waits for the specified timeout until all pending
            requests are processed.
            </summary>
            <param name="timeout">The maximum amount of time to wait for pending requests to finish processing.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.CheckDisposed">
            <summary>
            Ensures the current instance is not disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The current instance is disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.RaiseExceptionEvent(System.Exception)">
            <summary>
            Raises <see cref="E:Renci.SshNet.ForwardedPort.Exception"/> event.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)">
            <summary>
            Raises <see cref="E:Renci.SshNet.ForwardedPort.RequestReceived"/> event.
            </summary>
            <param name="host">Request originator host.</param>
            <param name="port">Request originator port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.RaiseClosing">
            <summary>
            Raises the <see cref="E:Renci.SshNet.IForwardedPort.Closing"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Session_ErrorOccured(System.Object,Renci.SshNet.Common.ExceptionEventArgs)">
            <summary>
            Handles session ErrorOccured event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Renci.SshNet.Common.ExceptionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Renci.SshNet.ForwardedPortDynamic">
            <summary>
            Provides functionality for forwarding connections from the client to destination servers via the SSH server,
            also known as dynamic port forwarding.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortDynamic.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortDynamic.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortDynamic.IsStarted">
            <summary>
            Gets a value indicating whether port forwarding is started.
            </summary>
            <value>
            <c>true</c> if port forwarding is started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortDynamic"/> class.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortDynamic"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.StartPort">
            <summary>
            Starts local port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.StopPort(System.TimeSpan)">
            <summary>
            Stops local port forwarding, and waits for the specified timeout until all pending
            requests are processed.
            </summary>
            <param name="timeout">The maximum amount of time to wait for pending requests to finish processing.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.CheckDisposed">
            <summary>
            Ensures the current instance is not disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The current instance is disposed.</exception>
        </member>
        <member name="F:Renci.SshNet.ForwardedPortDynamic._isDisposed">
            <summary>
            Holds a value indicating whether the current instance is disposed.
            </summary>
            <value>
            <c>true</c> if the current instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortDynamic.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.ForwardedPortDynamic"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ForwardedPortLocal">
            <summary>
            Provides functionality for local port forwarding
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.Host">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.Port">
            <summary>
            Gets the forwarded port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortLocal.IsStarted">
            <summary>
            Gets a value indicating whether port forwarding is started.
            </summary>
            <value>
            <c>true</c> if port forwarding is started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortLocal"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="boundPort" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
            <example>
                <code source="..\..\src\Renci.SshNet.Tests\Classes\ForwardedPortLocalTest.cs" region="Example SshClient AddForwardedPort Start Stop ForwardedPortLocal" language="C#" title="Local port forwarding" />
            </example>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.String,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortLocal"/> class.
            </summary>
            <param name="boundHost">The bound host.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="boundHost"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortLocal"/> class.
            </summary>
            <param name="boundHost">The bound host.</param>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="boundHost"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="boundPort" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.StartPort">
            <summary>
            Starts local port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.StopPort(System.TimeSpan)">
            <summary>
            Stops local port forwarding, and waits for the specified timeout until all pending
            requests are processed.
            </summary>
            <param name="timeout">The maximum amount of time to wait for pending requests to finish processing.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.CheckDisposed">
            <summary>
            Ensures the current instance is not disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The current instance is disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.ForwardedPortLocal"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ForwardedPortRemote">
            <summary>
            Provides functionality for remote port forwarding
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.IsStarted">
            <summary>
            Gets a value indicating whether port forwarding is started.
            </summary>
            <value>
            <c>true</c> if port forwarding is started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.BoundHostAddress">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.HostAddress">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.Host">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPortRemote.Port">
            <summary>
            Gets the forwarded port.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.#ctor(System.Net.IPAddress,System.UInt32,System.Net.IPAddress,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortRemote" /> class.
            </summary>
            <param name="boundHostAddress">The bound host address.</param>
            <param name="boundPort">The bound port.</param>
            <param name="hostAddress">The host address.</param>
            <param name="port">The port.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="boundHostAddress"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="hostAddress"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="boundPort" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortRemote"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <example>
                <code source="..\..\src\Renci.SshNet.Tests\Classes\ForwardedPortRemoteTest.cs" region="Example SshClient AddForwardedPort Start Stop ForwardedPortRemote" language="C#" title="Remote port forwarding" />
            </example>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ForwardedPortRemote"/> class.
            </summary>
            <param name="boundHost">The bound host.</param>
            <param name="boundPort">The bound port.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.StartPort">
            <summary>
            Starts remote port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.StopPort(System.TimeSpan)">
            <summary>
            Stops remote port forwarding.
            </summary>
            <param name="timeout">The maximum amount of time to wait for the port to stop.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.CheckDisposed">
            <summary>
            Ensures the current instance is not disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The current instance is disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.InitializePendingChannelCountdown">
            <summary>
            Initializes the <see cref="T:Renci.SshNet.Common.CountdownEvent"/>.
            </summary>
            <remarks>
            <para>
            When the port is started for the first time, a <see cref="T:Renci.SshNet.Common.CountdownEvent"/> is created with an initial count
            of <c>1</c>.
            </para>
            <para>
            On subsequent (re)starts, we'll dispose the current <see cref="T:Renci.SshNet.Common.CountdownEvent"/> and create a new one with
            initial count of <c>1</c>.
            </para>
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.ForwardedPortRemote"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortStatus.ToStopping(Renci.SshNet.ForwardedPortStatus@)">
            <summary>
            Returns a value indicating whether <paramref name="status"/> has been changed to <see cref="F:Renci.SshNet.ForwardedPortStatus.Stopping"/>.
            </summary>
            <param name="status">The status to transition from.</param>
            <returns>
            <c>true</c> if <paramref name="status"/> has been changed to <see cref="F:Renci.SshNet.ForwardedPortStatus.Stopping"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Cannot transition <paramref name="status"/> to <see cref="F:Renci.SshNet.ForwardedPortStatus.Stopping"/>.</exception>
            <remarks>
            While a transition from <see cref="F:Renci.SshNet.ForwardedPortStatus.Stopped"/> to <see cref="F:Renci.SshNet.ForwardedPortStatus.Stopping"/> is not possible, this method will
            return <c>false</c> for any such attempts.  This is related to concurrency.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortStatus.ToStarting(Renci.SshNet.ForwardedPortStatus@)">
            <summary>
            Returns a value indicating whether <paramref name="status"/> has been changed to <see cref="F:Renci.SshNet.ForwardedPortStatus.Starting"/>.
            </summary>
            <param name="status">The status to transition from.</param>
            <returns>
            <c>true</c> if <paramref name="status"/> has been changed to <see cref="F:Renci.SshNet.ForwardedPortStatus.Starting"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Cannot transition <paramref name="status"/> to <see cref="F:Renci.SshNet.ForwardedPortStatus.Starting"/>.</exception>
            <remarks>
            While a transition from <see cref="F:Renci.SshNet.ForwardedPortStatus.Started"/> to <see cref="F:Renci.SshNet.ForwardedPortStatus.Starting"/> is not possible, this method will
            return <c>false</c> for any such attempts.  This is related to concurrency.
            </remarks>
        </member>
        <member name="T:Renci.SshNet.HashInfo">
            <summary>
            Holds information about key size and cipher to use
            </summary>
        </member>
        <member name="P:Renci.SshNet.HashInfo.KeySize">
            <summary>
            Gets the size of the key.
            </summary>
            <value>
            The size of the key.
            </value>
        </member>
        <member name="P:Renci.SshNet.HashInfo.HashAlgorithm">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="M:Renci.SshNet.HashInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Security.Cryptography.HashAlgorithm})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.CipherInfo"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
            <param name="hash">The hash algorithm to use for a given key.</param>
        </member>
        <member name="T:Renci.SshNet.IAuthenticationMethod">
            <summary>
            Base interface for authentication of a session using a given method.
            </summary>
        </member>
        <member name="M:Renci.SshNet.IAuthenticationMethod.Authenticate(Renci.SshNet.ISession)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>
            The result of the authentication process.
            </returns>
        </member>
        <member name="P:Renci.SshNet.IAuthenticationMethod.AllowedAuthentications">
            <summary>
            Gets the list of allowed authentications.
            </summary>
            <value>
            The list of allowed authentications.
            </value>
        </member>
        <member name="P:Renci.SshNet.IAuthenticationMethod.Name">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the authentication method.
            </value>
        </member>
        <member name="M:Renci.SshNet.IConnectionInfoInternal.UserAuthenticationBannerReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.BannerMessage})">
            <summary>
            Signals that an authentication banner message was received from the server.
            </summary>
            <param name="sender">The session in which the banner message was received.</param>
            <param name="e">The banner message.{</param>
        </member>
        <member name="P:Renci.SshNet.IConnectionInfoInternal.AuthenticationMethods">
            <summary>
            Gets the supported authentication methods for this connection.
            </summary>
            <value>
            The supported authentication methods for this connection.
            </value>
        </member>
        <member name="M:Renci.SshNet.IConnectionInfoInternal.CreateNoneAuthenticationMethod">
            <summary>
            Creates a <see cref="T:Renci.SshNet.NoneAuthenticationMethod"/> for the credentials represented
            by the current <see cref="T:Renci.SshNet.IConnectionInfo"/>.
            </summary>
            <returns>
            A <see cref="T:Renci.SshNet.NoneAuthenticationMethod"/> for the credentials represented by the
            current <see cref="T:Renci.SshNet.IConnectionInfo"/>.
            </returns>
        </member>
        <member name="T:Renci.SshNet.IConnectionInfo">
            <summary>
            Represents remote connection information.
            </summary>
        </member>
        <member name="P:Renci.SshNet.IConnectionInfo.ChannelRequests">
            <summary>
            Gets the supported channel requests for this connection.
            </summary>
            <value>
            The supported channel requests for this connection.
            </value>
        </member>
        <member name="P:Renci.SshNet.IConnectionInfo.Encoding">
            <summary>
            Gets the character encoding.
            </summary>
            <value>
            The character encoding.
            </value>
        </member>
        <member name="P:Renci.SshNet.IConnectionInfo.RetryAttempts">
            <summary>
            Gets the number of retry attempts when session channel creation failed.
            </summary>
            <value>
            The number of retry attempts when session channel creation failed.
            </value>
        </member>
        <member name="P:Renci.SshNet.IConnectionInfo.Timeout">
            <summary>
            Gets or sets connection timeout.
            </summary>
            <value>
            The connection timeout. The default value is 30 seconds.
            </value>
            <example>
              <code source="..\..\src\Renci.SshNet.Tests\Classes\SshClientTest.cs" region="Example SshClient Connect Timeout" language="C#" title="Specify connection timeout" />
            </example>
        </member>
        <member name="E:Renci.SshNet.IConnectionInfo.AuthenticationBanner">
            <summary>
            Occurs when authentication banner is sent by the server.
            </summary>
        </member>
        <member name="T:Renci.SshNet.IForwardedPort">
            <summary>
            Supports port forwarding functionality.
            </summary>
        </member>
        <member name="E:Renci.SshNet.IForwardedPort.Closing">
            <summary>
            The <see cref="E:Renci.SshNet.IForwardedPort.Closing"/> event occurs as the forwarded port is being stopped.
            </summary>
        </member>
        <member name="T:Renci.SshNet.IRemotePathTransformation">
            <summary>
            Represents a transformation that can be applied to a remote path.
            </summary>
        </member>
        <member name="M:Renci.SshNet.IRemotePathTransformation.Transform(System.String)">
            <summary>
            Transforms the specified remote path.
            </summary>
            <param name="path">The path to transform.</param>
            <returns>
            The transformed path.
            </returns>
        </member>
        <member name="T:Renci.SshNet.IServiceFactory">
            <summary>
            Factory for creating new services.
            </summary>
        </member>
        <member name="M:Renci.SshNet.IServiceFactory.CreateSession(Renci.SshNet.ConnectionInfo)">
            <summary>
            Creates a new <see cref="T:Renci.SshNet.ISession"/> with the specified <see cref="T:Renci.SshNet.ConnectionInfo"/>.
            </summary>
            <param name="connectionInfo">The <see cref="T:Renci.SshNet.ConnectionInfo"/> to use for creating a new session.</param>
            <returns>
            An <see cref="T:Renci.SshNet.ISession"/> for the specified <see cref="T:Renci.SshNet.ConnectionInfo"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionInfo"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.IServiceFactory.CreateSftpSession(Renci.SshNet.ISession,System.Int32,System.Text.Encoding,Renci.SshNet.Sftp.ISftpResponseFactory)">
            <summary>
            Creates a new <see cref="T:Renci.SshNet.Sftp.ISftpSession"/> in a given <see cref="T:Renci.SshNet.ISession"/> and with
            the specified operation timeout and encoding.
            </summary>
            <param name="session">The <see cref="T:Renci.SshNet.ISession"/> to create the <see cref="T:Renci.SshNet.Sftp.ISftpSession"/> in.</param>
            <param name="operationTimeout">The number of milliseconds to wait for an operation to complete, or -1 to wait indefinitely.</param>
            <param name="encoding">The encoding.</param>
            <param name="sftpMessageFactory">The factory to use for creating SFTP messages.</param>
            <returns>
            An <see cref="T:Renci.SshNet.Sftp.ISftpSession"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.IServiceFactory.CreatePipeStream">
            <summary>
            Create a new <see cref="T:Renci.SshNet.Common.PipeStream"/>.
            </summary>
            <returns>
            A <see cref="T:Renci.SshNet.Common.PipeStream"/>.
            </returns>
        </member>
        <member name="M:Renci.SshNet.IServiceFactory.CreateKeyExchange(System.Collections.Generic.IDictionary{System.String,System.Type},System.String[])">
            <summary>
            Negotiates a key exchange algorithm, and creates a <see cref="T:Renci.SshNet.Security.IKeyExchange" /> for the negotiated
            algorithm.
            </summary>
            <param name="clientAlgorithms">A <see cref="T:System.Collections.Generic.IDictionary`2"/> of the key exchange algorithms supported by the client where the key is the name of the algorithm, and the value is the type implementing this algorithm.</param>
            <param name="serverAlgorithms">The names of the key exchange algorithms supported by the SSH server.</param>
            <returns>
            A <see cref="T:Renci.SshNet.Security.IKeyExchange"/> that was negotiated between client and server.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="clientAlgorithms"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="serverAlgorithms"/> is <c>null</c>.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">No key exchange algorithm is supported by both client and server.</exception>
        </member>
        <member name="M:Renci.SshNet.IServiceFactory.CreateShellStream(Renci.SshNet.ISession,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32},System.Int32)">
            <summary>
            Creates a shell stream.
            </summary>
            <param name="session">The SSH session.</param>
            <param name="terminalName">The <c>TERM</c> environment variable.</param>
            <param name="columns">The terminal width in columns.</param>
            <param name="rows">The terminal width in rows.</param>
            <param name="width">The terminal height in pixels.</param>
            <param name="height">The terminal height in pixels.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
            <returns>
            The created <see cref="T:Renci.SshNet.ShellStream"/> instance.
            </returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <remarks>
            <para>
            The <c>TERM</c> environment variable contains an identifier for the text window's capabilities.
            You can get a detailed list of these cababilities by using the ‘infocmp’ command.
            </para>
            <para>
            The column/row dimensions override the pixel dimensions(when non-zero). Pixel dimensions refer
            to the drawable area of the window.
            </para>
            </remarks>
        </member>
        <member name="M:Renci.SshNet.IServiceFactory.CreateRemotePathDoubleQuoteTransformation">
            <summary>
            Creates an <see cref="T:Renci.SshNet.IRemotePathTransformation"/> that encloses a path in double quotes, and escapes
            any embedded double quote with a backslash.
            </summary>
            <returns>
            An <see cref="T:Renci.SshNet.IRemotePathTransformation"/> that encloses a path in double quotes, and escapes any
            embedded double quote with a backslash.
            with a shell.
            </returns>
        </member>
        <member name="T:Renci.SshNet.ISession">
            <summary>
            Provides functionality to connect and interact with SSH server.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ISession.ConnectionInfo">
            <summary>
            Gets or sets the connection info.
            </summary>
            <value>The connection info.</value>
        </member>
        <member name="P:Renci.SshNet.ISession.IsConnected">
            <summary>
            Gets a value indicating whether the session is connected.
            </summary>
            <value>
            <c>true</c> if the session is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.ISession.SessionSemaphore">
            <summary>
            Gets the session semaphore that controls session channels.
            </summary>
            <value>
            The session semaphore.
            </value>
        </member>
        <member name="P:Renci.SshNet.ISession.MessageListenerCompleted">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that can be used to wait for the message listener loop to complete.
            </summary>
            <value>
            A <see cref="T:System.Threading.WaitHandle"/> that can be used to wait for the message listener loop to complete, or
            <c>null</c> when the session has not been connected.
            </value>
        </member>
        <member name="M:Renci.SshNet.ISession.Connect">
            <summary>
            Connects to the server.
            </summary>
            <exception cref="T:System.Net.Sockets.SocketException">Socket connection to the SSH server or proxy server could not be established, or an error occurred while resolving the hostname.</exception>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">SSH session could not be established.</exception>
            <exception cref="T:Renci.SshNet.Common.SshAuthenticationException">Authentication of SSH session failed.</exception>
            <exception cref="T:Renci.SshNet.Common.ProxyException">Failed to establish proxy connection.</exception>
        </member>
        <member name="M:Renci.SshNet.ISession.CreateChannelSession">
            <summary>
            Create a new SSH session channel.
            </summary>
            <returns>
            A new SSH session channel.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ISession.CreateChannelDirectTcpip">
            <summary>
            Create a new channel for a locally forwarded TCP/IP port.
            </summary>
            <returns>
            A new channel for a locally forwarded TCP/IP port.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ISession.CreateChannelForwardedTcpip(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates a "forwarded-tcpip" SSH channel.
            </summary>
            <returns>
            A new "forwarded-tcpip" SSH channel.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ISession.Disconnect">
            <summary>
            Disconnects from the server.
            </summary>
            <remarks>
            This sends a <b>SSH_MSG_DISCONNECT</b> message to the server, waits for the
            server to close the socket on its end and subsequently closes the client socket.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ISession.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ISession.RegisterMessage(System.String)">
            <summary>
            Registers SSH message with the session.
            </summary>
            <param name="messageName">The name of the message to register with the session.</param>
        </member>
        <member name="M:Renci.SshNet.ISession.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends a message to the server.
            </summary>
            <param name="message">The message to send.</param>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">The client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">The operation timed out.</exception>
            <exception cref="T:System.InvalidOperationException">The size of the packet exceeds the maximum size defined by the protocol.</exception>
        </member>
        <member name="M:Renci.SshNet.ISession.TrySendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends a message to the server.
            </summary>
            <param name="message">The message to send.</param>
            <returns>
            <c>true</c> if the message was sent to the server; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">The size of the packet exceeds the maximum size defined by the protocol.</exception>
            <remarks>
            This methods returns <c>false</c> when the attempt to send the message results in a
            <see cref="T:System.Net.Sockets.SocketException"/> or a <see cref="T:Renci.SshNet.Common.SshException"/>.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ISession.UnRegisterMessage(System.String)">
            <summary>
            Unregister SSH message from the session.
            </summary>
            <param name="messageName">The name of the message to unregister with the session.</param>
        </member>
        <member name="M:Renci.SshNet.ISession.WaitOnHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for the specified handle or the exception handle for the receive thread
            to signal within the connection timeout.
            </summary>
            <param name="waitHandle">The wait handle.</param>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">A received package was invalid or failed the message integrity check.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">None of the handles are signaled in time and the session is not disconnecting.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">A socket error was signaled while receiving messages from the server.</exception>
            <remarks>
            When neither handles are signaled in time and the session is not closing, then the
            session is disconnected.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ISession.WaitOnHandle(System.Threading.WaitHandle,System.TimeSpan)">
            <summary>
            Waits for the specified handle or the exception handle for the receive thread
            to signal within the specified timeout.
            </summary>
            <param name="waitHandle">The wait handle.</param>
            <param name="timeout">The time to wait for any of the handles to become signaled.</param>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">A received package was invalid or failed the message integrity check.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">None of the handles are signaled in time and the session is not disconnecting.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">A socket error was signaled while receiving messages from the server.</exception>
            <remarks>
            When neither handles are signaled in time and the session is not closing, then the
            session is disconnected.
            </remarks>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelCloseReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelEofReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelOpenConfirmationReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelOpenFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelOpenReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelSuccessReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ChannelWindowAdjustReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.Disconnected">
            <summary>
            Occurs when session has been disconnected from the server.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.ErrorOccured">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.HostKeyReceived">
            <summary>
            Occurs when host key received.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.RequestSuccessReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.RequestFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.RequestFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.ISession.UserAuthenticationBannerReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.BannerMessage"/> message is received from the server.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ISubsystemSession">
            <summary>
            Base interface for SSH subsystem implementations.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ISubsystemSession.OperationTimeout">
            <summary>
            Gets or set the number of seconds to wait for an operation to complete.
            </summary>
            <value>
            The number of seconds to wait for an operation to complete, or -1 to wait indefinitely.
            </value>
        </member>
        <member name="P:Renci.SshNet.ISubsystemSession.IsOpen">
            <summary>
            Gets a value indicating whether this session is open.
            </summary>
            <value>
            <c>true</c> if this session is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.ISubsystemSession.Connect">
            <summary>
            Connects the subsystem using a new SSH channel session.
            </summary>
            <exception cref="T:System.InvalidOperationException">The session is already connected.</exception>
            <exception cref="T:System.ObjectDisposedException">The method was called after the session was disposed.</exception>
        </member>
        <member name="M:Renci.SshNet.ISubsystemSession.Disconnect">
            <summary>
            Disconnects the subsystem channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ISubsystemSession.WaitOnHandle(System.Threading.WaitHandle,System.Int32)">
            <summary>
            Waits a specified time for a given <see cref="T:System.Threading.WaitHandle"/> to get signaled.
            </summary>
            <param name="waitHandle">The handle to wait for.</param>
            <param name="millisecondsTimeout">The number of millieseconds wait for <paramref name="waitHandle"/> to get signaled, or -1 to wait indefinitely.</param>
            <exception cref="T:Renci.SshNet.Common.SshException">The connection was closed by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">The channel was closed.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">The handle did not get signaled within the specified timeout.</exception>
        </member>
        <member name="M:Renci.SshNet.ISubsystemSession.WaitOne(System.Threading.WaitHandle,System.Int32)">
            <summary>
            Blocks the current thread until the specified <see cref="T:System.Threading.WaitHandle"/> gets signaled, using a
            32-bit signed integer to specify the time interval in milliseconds.
            </summary>
            <param name="waitHandle">The handle to wait for.</param>
            <param name="millisecondsTimeout">To number of milliseconds to wait for <paramref name="waitHandle"/> to get signaled, or -1 to wait indefinitely.</param>
            <returns>
            <c>true</c> if <paramref name="waitHandle"/> received a signal within the specified timeout;
            otherwise, <c>false</c>.
            </returns>
            <exception cref="T:Renci.SshNet.Common.SshException">The connection was closed by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">The channel was closed.</exception>
            <remarks>
            The blocking wait is also interrupted when either the established channel is closed, the current
            session is disconnected or an unexpected <see cref="T:System.Exception"/> occurred while processing a channel
            or session event.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ISubsystemSession.WaitAny(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32)">
            <summary>
            Blocks the current thread until the specified <see cref="T:System.Threading.WaitHandle"/> gets signaled, using a
            32-bit signed integer to specify the time interval in milliseconds.
            </summary>
            <param name="waitHandleA">The first handle to wait for.</param>
            <param name="waitHandleB">The second handle to wait for.</param>
            <param name="millisecondsTimeout">To number of milliseconds to wait for a <see cref="T:System.Threading.WaitHandle"/> to get signaled, or -1 to wait indefinitely.</param>
            <returns>
            <c>0</c> if <paramref name="waitHandleA"/> received a signal within the specified timeout and <c>1</c>
            if <paramref name="waitHandleB"/> received a signal within the specified timeout, or <see cref="F:System.Threading.WaitHandle.WaitTimeout"/>
            if no object satisfied the wait.
            </returns>
            <exception cref="T:Renci.SshNet.Common.SshException">The connection was closed by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">The channel was closed.</exception>
            <remarks>
            <para>
            The blocking wait is also interrupted when either the established channel is closed, the current
            session is disconnected or an unexpected <see cref="T:System.Exception"/> occurred while processing a channel
            or session event.
            </para>
            <para>
            When both <paramref name="waitHandleA"/> and <paramref name="waitHandleB"/> are signaled during the call,
            then <c>0</c> is returned.
            </para>
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ISubsystemSession.WaitAny(System.Threading.WaitHandle[],System.Int32)">
            <summary>
            Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed
            integer to specify the time interval.
            </summary>
            <param name="waitHandles">A <see cref="T:System.Threading.WaitHandle"/> array - constructed using <see cref="M:Renci.SshNet.ISubsystemSession.CreateWaitHandleArray(System.Threading.WaitHandle[])"/> - containing the objects to wait for.</param>
            <param name="millisecondsTimeout">To number of milliseconds to wait for a <see cref="T:System.Threading.WaitHandle"/> to get signaled, or -1 to wait indefinitely.</param>
            <returns>
            The array index of the first non-system object that satisfied the wait.
            </returns>
            <exception cref="T:Renci.SshNet.Common.SshException">The connection was closed by the server.</exception>
            <exception cref="T:Renci.SshNet.Common.SshException">The channel was closed.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">No object satified the wait and a time interval equivalent to <paramref name="millisecondsTimeout"/> has passed.</exception>
            <remarks>
            For the return value, the index of the first non-system object is considered to be zero.
            </remarks>
        </member>
        <member name="M:Renci.SshNet.ISubsystemSession.CreateWaitHandleArray(System.Threading.WaitHandle[])">
            <summary>
            Creates a <see cref="T:System.Threading.WaitHandle"/> array that is composed of system objects and the specified
            elements.
            </summary>
            <param name="waitHandles">A <see cref="T:System.Threading.WaitHandle"/> array containing the objects to wait for.</param>
            <returns>
            A <see cref="T:System.Threading.WaitHandle"/> array that is composed of system objects and the specified elements.
            </returns>
        </member>
        <member name="M:Renci.SshNet.ISubsystemSession.CreateWaitHandleArray(System.Threading.WaitHandle,System.Threading.WaitHandle)">
            <summary>
            Creates a <see cref="T:System.Threading.WaitHandle"/> array that is composed of system objects and the specified
            elements.
            </summary>
            <param name="waitHandle1">The first <see cref="T:System.Threading.WaitHandle"/> to wait for.</param>
            <param name="waitHandle2">The second <see cref="T:System.Threading.WaitHandle"/> to wait for.</param>
            <returns>
            A <see cref="T:System.Threading.WaitHandle"/> array that is composed of system objects and the specified elements.
            </returns>
        </member>
        <member name="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod">
            <summary>
            Provides functionality to perform keyboard interactive authentication.
            </summary>
        </member>
        <member name="P:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Name">
            <summary>
            Gets authentication method name
            </summary>
        </member>
        <member name="E:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.AuthenticationPrompt">
            <summary>
            Occurs when server prompts for more authentication information.
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod"/> class.
            </summary>
            <param name="username">The username.</param>
            <exception cref="T:System.ArgumentException"><paramref name="username"/> is whitespace or <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to authenticate.</param>
            <returns>Result of authentication  process.</returns>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.KeyboardInteractiveConnectionInfo">
            <summary>
            Provides connection information when keyboard interactive authentication method is used
            </summary>
            <example>
                <code source="..\..\src\Renci.SshNet.Tests\Classes\KeyboardInteractiveConnectionInfoTest.cs" region="Example KeyboardInteractiveConnectionInfo AuthenticationPrompt" language="C#" title="Connect using interactive method" />
            </example>
        </member>
        <member name="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt">
            <summary>
            Occurs when server prompts for more authentication information.
            </summary>
            <example>
                <code source="..\..\src\Renci.SshNet.Tests\Classes\KeyboardInteractiveConnectionInfoTest.cs" region="Example KeyboardInteractiveConnectionInfo AuthenticationPrompt" language="C#" title="Connect using interactive method" />
            </example>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="proxyType">Type of the proxy.</param>
            <param name="proxyHost">The proxy host.</param>
            <param name="proxyPort">The proxy port.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.MessageEventArgs`1">
            <summary>
            Provides data for message events.
            </summary>
            <typeparam name="T">Message type</typeparam>
        </member>
        <member name="P:Renci.SshNet.MessageEventArgs`1.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.MessageEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.MessageEventArgs`1"/> class.
            </summary>
            <param name="message">The message.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="message"/> is <c>null</c>.</exception>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.BannerMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_BANNER message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.BannerMessage.Message">
            <summary>
            Gets banner message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.BannerMessage.Language">
            <summary>
            Gets banner language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.BannerMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.BannerMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.BannerMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.FailureMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_FAILURE message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.AllowedAuthentications">
            <summary>
            Gets or sets the allowed authentications if available.
            </summary>
            <value>
            The allowed authentications.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.Message">
            <summary>
            Gets failure message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.PartialSuccess">
            <summary>
            Gets a value indicating whether authentication is partially successful.
            </summary>
            <value>
              <c>true</c> if partially successful; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.FailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.FailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.InformationRequestMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_INFO_REQUEST message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Name">
            <summary>
            Gets information request name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Instruction">
            <summary>
            Gets information request instruction.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Language">
            <summary>
            Gets information request language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Prompts">
            <summary>
            Gets information request prompts.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.InformationResponseMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_INFO_RESPONSE message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationResponseMessage.Responses">
            <summary>
            Gets authentication responses.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationResponseMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            <c>-1</c> to indicate that the size of the message cannot be determined,
            or is too costly to calculate.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.InformationResponseMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_PASSWD_CHANGEREQ message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.Message">
            <summary>
            Gets password change request message as UTF-8 encoded byte array.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.Language">
            <summary>
            Gets message language as UTF-8 encoded byte array.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.PublicKeyMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_PK_OK message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PublicKeyMessage.PublicKeyAlgorithmName">
            <summary>
            Gets the name of the public key algorithm as ASCII encoded byte array.
            </summary>
            <value>
            The name of the public key algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PublicKeyMessage.PublicKeyData">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PublicKeyMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PublicKeyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PublicKeyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_REQUEST message. Server as a base message for other user authentication requests.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.RequestMessage.AuthenticationMessageCode">
            <summary>
            Returns the authentication message code for <c>SSH_MSG_USERAUTH_REQUEST</c>.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.Username">
            <summary>
            Gets authentication username as UTF-8 encoded byte array.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.ServiceName">
            <summary>
            Gets the name of the service as ASCII encoded byte array.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="methodName">The name of the authentication method.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageHost">
            <summary>
            Represents "hostbased" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.PublicKeyAlgorithm">
            <summary>
            Gets the public key algorithm for host key as ASCII encoded byte array.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.PublicHostKey">
            <summary>
            Gets or sets the public host key and certificates for client host.
            </summary>
            <value>
            The public host key.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.ClientHostName">
            <summary>
            Gets or sets the name of the client host as ASCII encoded byte array.
            </summary>
            <value>
            The name of the client host.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.ClientUsername">
            <summary>
            Gets or sets the client username on the client host as UTF-8 encoded byte array.
            </summary>
            <value>
            The client username.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.Signature">
            <summary>
            Gets or sets the signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageHost.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessageHost"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="publicKeyAlgorithm">The public key algorithm.</param>
            <param name="publicHostKey">The public host key.</param>
            <param name="clientHostName">Name of the client host.</param>
            <param name="clientUsername">The client username.</param>
            <param name="signature">The signature.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageHost.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive">
            <summary>
            Represents "keyboard-interactive" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.SubMethods">
            <summary>
            Gets authentication sub methods.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageNone">
            <summary>
            Represents "none" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageNone.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword">
            <summary>
            Represents "password" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.Password">
            <summary>
            Gets authentication password.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.NewPassword">
            <summary>
            Gets new authentication password.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <param name="newPassword">New authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey">
            <summary>
            Represents "publickey" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyAlgorithmName">
            <summary>
            Gets the name of the public key algorithm as ASCII encoded byte array.
            </summary>
            <value>
            The name of the public key algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyData">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.Signature">
            <summary>
            Gets or sets public key signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="keyAlgorithmName">Name of private key algorithm.</param>
            <param name="keyData">Private key data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="keyAlgorithmName">Name of private key algorithm.</param>
            <param name="keyData">Private key data.</param>
            <param name="signature">Private key signature.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.SuccessMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.SuccessMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.SuccessMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.CancelTcpIpForwardGlobalRequestMessage.AddressToBind">
            <summary>
            Gets the address to bind to.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.CancelTcpIpForwardGlobalRequestMessage.PortToBind">
            <summary>
            Gets port number to bind to.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.CancelTcpIpForwardGlobalRequestMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.CancelTcpIpForwardGlobalRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.CancelTcpIpForwardGlobalRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_CLOSE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelDataMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_DATA message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data">
            <summary>
            Gets or sets message data.
            </summary>
            <value>
            The data.
            </value>
            <remarks>
            The actual data to read or write depends on the <see cref="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Offset"/> and <see cref="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Size"/>.
            </remarks>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Offset">
            <summary>
            Gets the zero-based offset in <see cref="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data"/> at which the data begins.
            </summary>
            <value>
            The zero-based offset in <see cref="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data"/> at which the data begins.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Size">
            <summary>
            Gets the number of bytes of <see cref="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data"/> to read or write.
            </summary>
            <value>
            The number of bytes of <see cref="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data"/> to read or write.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="data">Message data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor(System.UInt32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="data">The message data.</param>
            <param name="offset">The zero-based byte offset in <paramref name="data"/> at which to begin reading or writing data from.</param>
            <param name="size">The number of bytes of <paramref name="data"/> to read or write.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.SaveData">
            <summary>
            Saves the data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelEofMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_EOF message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_EXTENDED_DATA message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.DataTypeCode">
            <summary>
            Gets message data type code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.Data">
            <summary>
            Gets message data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="dataTypeCode">The message data type code.</param>
            <param name="data">The message data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.SaveData">
            <summary>
            Saves the data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelMessage">
            <summary>
            Base class for all channel specific SSH messages.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber">
            <summary>
            Gets or sets the local channel number.
            </summary>
            <value>
            The local channel number.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.#ctor">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Messages.Connection.ChannelMessage"/>.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Messages.Connection.ChannelMessage"/> with the specified local channel number.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN_CONFIRMATION message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.RemoteChannelNumber">
            <summary>
            Gets the remote channel number.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
            <param name="remoteChannelNumber">The remote channel number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN_FAILURE message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.ReasonCode">
            <summary>
            Gets failure reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Description">
            <summary>
            Gets description for failure.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="description">The description.</param>
            <param name="reasonCode">The reason code.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor(System.UInt32,System.String,System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="description">The description.</param>
            <param name="reasonCode">The reason code.</param>
            <param name="language">The language (RFC3066).</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons">
            <summary>
            List channel open failure reasons defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.AdministativelyProhibited">
            <summary>
            SSH_OPEN_ADMINISTRATIVELY_PROHIBITED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.ConnectFailed">
            <summary>
            SSH_OPEN_CONNECT_FAILED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.UnknownChannelType">
            <summary>
            SSH_OPEN_UNKNOWN_CHANNEL_TYPE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.ResourceShortage">
            <summary>
            SSH_OPEN_RESOURCE_SHORTAGE
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo">
            <summary>
            Base class for open channel messages
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.ChannelType">
            <summary>
            Gets the type of the channel as ASCII encoded byte array.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.LocalChannelNumber">
            <summary>
            Gets or sets the local channel number.
            </summary>
            <value>
            The local channel number.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.Info">
            <summary>
            Gets channel specific open information.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,Renci.SshNet.Messages.Connection.ChannelOpenInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> class.
            </summary>
            <param name="channelNumber">The channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
            <param name="info">Information specific to the type of the channel to open.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo">
            <summary>
            Used to open "direct-tcpip" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.HostToConnect">
            <summary>
            Gets the host to connect.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.PortToConnect">
            <summary>
            Gets the port to connect.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo"/> class from the
            specified data.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo"/> class.
            </summary>
            <param name="hostToConnect">The host to connect.</param>
            <param name="portToConnect">The port to connect.</param>
            <param name="originatorAddress">The originator address.</param>
            <param name="originatorPort">The originator port.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo">
            <summary>
            Used to open "forwarded-tcpip" channel type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo"/> class from the
            specified data.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo"/> instance with the specified connector
            address and port, and originator address and port.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ConnectedAddress">
            <summary>
            Gets the connected address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ConnectedPort">
            <summary>
            Gets the connected port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo">
            <summary>
            Used to open "session" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo.Name">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo"/> class from the
            specified data.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo">
            <summary>
            Used to open "x11" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.Name">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo"/> class from the
            specified data.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo"/> class with the
            specified originator address and port.
            </summary>
            <param name="originatorAddress">The originator address.</param>
            <param name="originatorPort">The originator port.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.BreakRequestInfo">
            <summary>
            Represents "break" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.BreakRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.BreakRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.BreakRequestInfo.BreakLength">
            <summary>
            Gets break length in milliseconds.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.BreakRequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.BreakRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.BreakRequestInfo.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
            <param name="breakLength">Length of the break.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.BreakRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.BreakRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_REQUEST message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestData">
            <summary>
            Gets channel request data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor(System.UInt32,Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo">
            <summary>
            Represents "eow@openssh.com" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo"/> class.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo">
            <summary>
            Represents "env" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.VariableName">
            <summary>
            Gets or sets the name of the variable.
            </summary>
            <value>
            The name of the variable.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.VariableValue">
            <summary>
            Gets or sets the variable value.
            </summary>
            <value>
            The variable value.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo"/> class.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExecRequestInfo">
            <summary>
            Represents "exec" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExecRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.Command">
            <summary>
            Gets command to execute.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.Encoding">
            <summary>
            Gets the encoding.
            </summary>
            <value>
            The encoding.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="encoding">The character encoding to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="command"/> or <paramref name="encoding"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo">
            <summary>
            Represents "exit-signal" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.SignalName">
            <summary>
            Gets the name of the signal.
            </summary>
            <value>
            The name of the signal.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.CoreDumped">
            <summary>
            Gets a value indicating whether core is dumped.
            </summary>
            <value>
              <c>true</c> if core is dumped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.#ctor(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo"/> class.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> then core is dumped.</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo">
            <summary>
            Represents "exit-status" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.Name">
            <summary>
            Channel request name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.ExitStatus">
            <summary>
            Gets the exit status number.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo"/> class.
            </summary>
            <param name="exitStatus">The exit status number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo">
            <summary>
            Represents "keepalive@openssh.com" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo"/> class.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo">
            <summary>
            Represents "pty-req" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.EnvironmentVariable">
            <summary>
            Gets or sets the value of the TERM environment variable (e.g., vt100).
            </summary>
            <value>
            The value of the TERM environment variable.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.Columns">
            <summary>
            Gets or sets the terminal width in columns (e.g., 80).
            </summary>
            <value>
            The terminal width in columns.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.Rows">
            <summary>
            Gets or sets the terminal width in rows (e.g., 24).
            </summary>
            <value>
            The terminal width in rows.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.PixelWidth">
            <summary>
            Gets or sets the terminal width in pixels (e.g., 640).
            </summary>
            <value>
            The terminal width in pixels.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.PixelHeight">
            <summary>
            Gets or sets the terminal height in pixels (e.g., 480).
            </summary>
            <value>
            The terminal height in pixels.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.TerminalModeValues">
            <summary>
            Gets or sets the terminal mode.
            </summary>
            <value>
            The terminal mode.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            <c>-1</c> to indicate that the size of the message cannot be determined,
            or is too costly to calculate.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.#ctor(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo"/> class.
            </summary>
            <param name="environmentVariable">The <c>TERM</c> environment variable which a identifier for the text window’s capabilities.</param>
            <param name="columns">The terminal width in columns.</param>
            <param name="rows">The terminal width in rows.</param>
            <param name="width">The terminal height in pixels.</param>
            <param name="height">The terminal height in pixels.</param>
            <param name="terminalModeValues">The terminal mode values.</param>
            <remarks>
            <para>
            The <c>TERM</c> environment variable contains an identifier for the text window's capabilities.
            You can get a detailed list of these cababilities by using the ‘infocmp’ command.
            </para>
            <para>
            The column/row dimensions override the pixel dimensions(when nonzero). Pixel dimensions refer
            to the drawable area of the window.
            </para>
            </remarks>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestInfo">
            <summary>
            Represents type specific information for channel request.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestInfo.WantReply">
            <summary>
            Gets or sets a value indicating whether reply message is needed.
            </summary>
            <value>
              <c>true</c> if reply message is needed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ShellRequestInfo">
            <summary>
            Represents "shell" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ShellRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ShellRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ShellRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ShellRequestInfo"/> class.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SignalRequestInfo">
            <summary>
            Represents "signal" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SignalRequestInfo.Name">
            <summary>
            Channel request name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SignalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SignalRequestInfo.SignalName">
            <summary>
            Gets the name of the signal.
            </summary>
            <value>
            The name of the signal.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SignalRequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SignalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SignalRequestInfo"/> class.
            </summary>
            <param name="signalName">Name of the signal.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo">
            <summary>
            Represents "subsystem" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.SubsystemName">
            <summary>
            Gets the name of the subsystem.
            </summary>
            <value>
            The name of the subsystem.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo"/> class.
            </summary>
            <param name="subsystem">The subsystem.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo">
            <summary>
            Represents "window-change" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Name">
            <summary>
            Channe request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Columns">
            <summary>
            Gets the columns.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo"/> class.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo">
            <summary>
            Represents "x11-req" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.Name">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.IsSingleConnection">
            <summary>
            Gets or sets a value indicating whether it is a single connection.
            </summary>
            <value>
            	<c>true</c> if it is a single connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.AuthenticationProtocol">
            <summary>
            Gets or sets the authentication protocol.
            </summary>
            <value>
            The authentication protocol.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.AuthenticationCookie">
            <summary>
            Gets or sets the authentication cookie.
            </summary>
            <value>
            The authentication cookie.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.ScreenNumber">
            <summary>
            Gets or sets the screen number.
            </summary>
            <value>
            The screen number.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.#ctor(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo"/> class.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> it is a single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo">
            <summary>
            Represents "xon-xoff" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.Name">
            <summary>
            Channel request type
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.ClientCanDo">
            <summary>
            Gets or sets a value indicating whether client can do.
            </summary>
            <value>
              <c>true</c> if client can do; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo"/> class.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_SUCCESS message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.BytesToAdd">
            <summary>
            Gets number of bytes to add to the window.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="bytesToAdd">The bytes to add.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage">
            <summary>
            Represents SSH_MSG_GLOBAL_REQUEST message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.WantReply">
            <summary>
            Gets a value indicating whether message reply should be sent..
            </summary>
            <value>
              <c>true</c> if message reply should be sent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
            <param name="requestName">Name of the request.</param>
            <param name="wantReply">if set to <c>true</c> [want reply].</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.GlobalRequestName">
            <summary>
            Specifies supported request names.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.GlobalRequestName.TcpIpForward">
            <summary>
            tcpip-forward
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.GlobalRequestName.CancelTcpIpForward">
            <summary>
            cancel-tcpip-forward
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestFailureMessage">
            <summary>
            Represents SSH_MSG_REQUEST_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage">
            <summary>
            Represents SSH_MSG_REQUEST_SUCCESS message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestSuccessMessage.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestSuccessMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.TcpIpForwardGlobalRequestMessage.AddressToBind">
            <summary>
            Gets the address to bind to.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.TcpIpForwardGlobalRequestMessage.PortToBind">
            <summary>
            Gets port number to bind to.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.TcpIpForwardGlobalRequestMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.TcpIpForwardGlobalRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.TcpIpForwardGlobalRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Message">
            <summary>
            Base class for all SSH protocol messages
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Message.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Message.WriteBytes(Renci.SshNet.Common.SshDataStream)">
            <summary>
            Writes the message to the specified <see cref="T:Renci.SshNet.Common.SshDataStream"/>.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Messages.Message.Process(Renci.SshNet.Session)">
            <summary>
            Process the current message for the specified <see cref="T:Renci.SshNet.Session"/>.
            </summary>
            <param name="session">The <see cref="T:Renci.SshNet.Session"/> for which to process the current message.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.MessageAttribute">
            <summary>
            Indicates that a class represents SSH message. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.MessageAttribute.Name">
            <summary>
            Gets or sets message name as defined in RFC 4250.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.MessageAttribute.Number">
            <summary>
            Gets or sets message number as defined in RFC 4250.
            </summary>
            <value>
            The number.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.MessageAttribute.#ctor(System.String,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.MessageAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="number">The number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.ServiceName">
            <summary>
            Specifies list of supported services
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.ServiceName.UserAuthentication">
            <summary>
            ssh-userauth
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.ServiceName.Connection">
            <summary>
            ssh-connection
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DebugMessage">
            <summary>
            Represents SSH_MSG_DEBUG message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.IsAlwaysDisplay">
            <summary>
            Gets a value indicating whether the message to be always displayed.
            </summary>
            <value>
            	<c>true</c> if the message always to be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.Message">
            <summary>
            Gets debug message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DebugMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DebugMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DisconnectMessage">
            <summary>
            Represents SSH_MSG_DISCONNECT message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.ReasonCode">
            <summary>
            Gets disconnect reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Description">
            <summary>
            Gets disconnect description.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor(Renci.SshNet.Messages.Transport.DisconnectReason,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> class.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DisconnectReason">
            <summary>
            Provides list of disconnect reason as specified by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.None">
            <summary>
            Disconnect reason is not provided.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostNotAllowedToConnect">
            <summary>
            SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolError">
            <summary>
            SSH_DISCONNECT_PROTOCOL_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.KeyExchangeFailed">
            <summary>
            SSH_DISCONNECT_KEY_EXCHANGE_FAILED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.Reserved">
            <summary>
            SSH_DISCONNECT_RESERVED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.MacError">
            <summary>
            SSH_DISCONNECT_MAC_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.CompressionError">
            <summary>
            SSH_DISCONNECT_COMPRESSION_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ServiceNotAvailable">
            <summary>
            SSH_DISCONNECT_SERVICE_NOT_AVAILABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolVersionNotSupported">
            <summary>
            SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostKeyNotVerifiable">
            <summary>
            SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ConnectionLost">
            <summary>
            SSH_DISCONNECT_CONNECTION_LOST
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ByApplication">
            <summary>
            SSH_DISCONNECT_BY_APPLICATION
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.TooManyConnections">
            <summary>
            SSH_DISCONNECT_TOO_MANY_CONNECTIONS
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.AuthenticationCanceledByUser">
            <summary>
            SSH_DISCONNECT_AUTH_CANCELLED_BY_USER
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.NoMoreAuthenticationMethodsAvailable">
            <summary>
            SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.IllegalUserName">
            <summary>
            SSH_DISCONNECT_ILLEGAL_USER_NAME
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.IgnoreMessage">
            <summary>
            Represents SSH_MSG_IGNORE message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.IgnoreMessage.Data">
            <summary>
            Gets ignore message data if any.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> class
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.IgnoreMessage.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.IKeyExchangedAllowed">
            <summary>
            Indicates that message that implement this interface is allowed during key exchange phase
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_GROUP message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SafePrime">
            <summary>
            Gets or sets the safe prime.
            </summary>
            <value>
            The safe prime.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SubGroup">
            <summary>
            Gets or sets the generator for subgroup in GF(p).
            </summary>
            <value>
            The sub group.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_INIT message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.E">
            <summary>
            Gets the E value.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.#ctor(Renci.SshNet.Common.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit"/> class.
            </summary>
            <param name="clientExchangeValue">The client exchange value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_REPLY message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.HostKey">
            <summary>
            Gets server public host key and certificates
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.F">
            <summary>
            Gets the F value.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.Signature">
            <summary>
            Gets the signature of H.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.BufferCapacity">
            <summary>
            Gets the size of the message in bytes.
            </summary>
            <value>
            The size of the messages in bytes.
            </v